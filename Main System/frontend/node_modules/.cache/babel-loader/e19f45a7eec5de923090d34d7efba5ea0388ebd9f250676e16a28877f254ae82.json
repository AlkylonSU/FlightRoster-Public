{"ast":null,"code":"var _jsxFileName = \"/Users/hamza/Desktop/308/FlightRoster/Main System/frontend/src/components/SelectFlight.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { useFlight } from '../context/FlightContext';\n\n// const SelectFlight = () => {\n//   const [flights, setFlights] = useState([]);\n//   const [selectedFlight, setSelectedFlight] = useState('');\n//   const navigate = useNavigate();\n//   const { setSelectedFlight: setGlobalSelectedFlight } = useFlight();\n\n//   useEffect(() => {\n//     fetch('http://localhost:8000/api/flightinfo/all-flights/') // Replace with your API endpoint\n//       .then(response => response.json())\n//       .then(data => setFlights(data))\n//       .catch(error => console.error('Error fetching flights:', error));\n//   }, []);\n\n//   const handleSelection = (e) => {\n//     setSelectedFlight(e.target.value);\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (selectedFlight) {\n//       const selectedFlightData = flights.find(flight => flight.flight_number === selectedFlight);\n//       fetch(`http://localhost:8080/backend/fetch-and-assign-crew/${selectedFlight}`, {\n//         method: 'GET',\n//       })\n//       .then(response => response.json())\n//       .then(data => {\n//         setGlobalSelectedFlight(selectedFlightData);\n//         navigate(`/home/${selectedFlight}`);\n//       })\n//       .catch(error => console.error('Error assigning crew:', error));\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Select Flight</h2>\n//       <form onSubmit={handleSubmit}>\n//         <label htmlFor=\"flights\">Choose a flight:</label>\n//         <select id=\"flights\" value={selectedFlight} onChange={handleSelection}>\n//           <option value=\"\" disabled>Select a flight</option>\n//           {flights.map((flight) => (\n//             <option key={flight.flight_number} value={flight.flight_number}>\n//               {flight.flight_number} - {flight.source_city} to {flight.destination_city}\n//             </option>\n//           ))}\n//         </select>\n//         <button type=\"submit\">Confirm</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default SelectFlight;\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useFlight } from '../context/FlightContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectFlight = () => {\n  _s();\n  const [flights, setFlights] = useState([]);\n  const [selectedFlight, setSelectedFlight] = useState('');\n  const navigate = useNavigate();\n  const {\n    setSelectedFlight: setGlobalSelectedFlight\n  } = useFlight();\n  useEffect(() => {\n    const fetchFlights = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/flightinfo/all-flights/');\n        const data = await response.json();\n        setFlights(data);\n      } catch (error) {\n        console.error('Error fetching flights:', error);\n      }\n    };\n    fetchFlights();\n  }, []);\n  const handleSelection = e => {\n    setSelectedFlight(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedFlight) return;\n    try {\n      const selectedFlightData = flights.find(flight => flight.flight_number === selectedFlight);\n      const response = await fetch(`http://localhost:8080/backend/fetch-and-assign-crew/${selectedFlight}`, {\n        method: 'GET'\n      });\n      const data = await response.json();\n      setGlobalSelectedFlight(selectedFlightData);\n      navigate(`/home/${selectedFlight}`);\n    } catch (error) {\n      console.error('Error assigning crew:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select Flight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"flights\",\n        children: \"Choose a flight:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"flights\",\n        value: selectedFlight,\n        onChange: handleSelection,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a flight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), flights.map(flight => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: flight.flight_number,\n          children: [flight.flight_number, \" - \", flight.source_city, \" to \", flight.destination_city]\n        }, flight.flight_number, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectFlight, \"2jEdftddNtfVzd3xTuJT86Qmc6U=\", false, function () {\n  return [useNavigate, useFlight];\n});\n_c = SelectFlight;\nexport default SelectFlight;\nvar _c;\n$RefreshReg$(_c, \"SelectFlight\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useFlight","jsxDEV","_jsxDEV","SelectFlight","_s","flights","setFlights","selectedFlight","setSelectedFlight","navigate","setGlobalSelectedFlight","fetchFlights","response","fetch","data","json","error","console","handleSelection","e","target","value","handleSubmit","preventDefault","selectedFlightData","find","flight","flight_number","method","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","required","disabled","map","source_city","destination_city","type","_c","$RefreshReg$"],"sources":["/Users/hamza/Desktop/308/FlightRoster/Main System/frontend/src/components/SelectFlight.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { useFlight } from '../context/FlightContext';\n\n// const SelectFlight = () => {\n//   const [flights, setFlights] = useState([]);\n//   const [selectedFlight, setSelectedFlight] = useState('');\n//   const navigate = useNavigate();\n//   const { setSelectedFlight: setGlobalSelectedFlight } = useFlight();\n\n//   useEffect(() => {\n//     fetch('http://localhost:8000/api/flightinfo/all-flights/') // Replace with your API endpoint\n//       .then(response => response.json())\n//       .then(data => setFlights(data))\n//       .catch(error => console.error('Error fetching flights:', error));\n//   }, []);\n\n//   const handleSelection = (e) => {\n//     setSelectedFlight(e.target.value);\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (selectedFlight) {\n//       const selectedFlightData = flights.find(flight => flight.flight_number === selectedFlight);\n//       fetch(`http://localhost:8080/backend/fetch-and-assign-crew/${selectedFlight}`, {\n//         method: 'GET',\n//       })\n//       .then(response => response.json())\n//       .then(data => {\n//         setGlobalSelectedFlight(selectedFlightData);\n//         navigate(`/home/${selectedFlight}`);\n//       })\n//       .catch(error => console.error('Error assigning crew:', error));\n//     }\n//   };\n  \n\n//   return (\n//     <div>\n//       <h2>Select Flight</h2>\n//       <form onSubmit={handleSubmit}>\n//         <label htmlFor=\"flights\">Choose a flight:</label>\n//         <select id=\"flights\" value={selectedFlight} onChange={handleSelection}>\n//           <option value=\"\" disabled>Select a flight</option>\n//           {flights.map((flight) => (\n//             <option key={flight.flight_number} value={flight.flight_number}>\n//               {flight.flight_number} - {flight.source_city} to {flight.destination_city}\n//             </option>\n//           ))}\n//         </select>\n//         <button type=\"submit\">Confirm</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default SelectFlight;\n\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useFlight } from '../context/FlightContext';\n\nconst SelectFlight = () => {\n  const [flights, setFlights] = useState([]);\n  const [selectedFlight, setSelectedFlight] = useState('');\n  const navigate = useNavigate();\n  const { setSelectedFlight: setGlobalSelectedFlight } = useFlight();\n\n  useEffect(() => {\n    const fetchFlights = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/flightinfo/all-flights/');\n        const data = await response.json();\n        setFlights(data);\n      } catch (error) {\n        console.error('Error fetching flights:', error);\n      }\n    };\n\n    fetchFlights();\n  }, []);\n\n  const handleSelection = (e) => {\n    setSelectedFlight(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!selectedFlight) return;\n\n    try {\n      const selectedFlightData = flights.find(flight => flight.flight_number === selectedFlight);\n      const response = await fetch(`http://localhost:8080/backend/fetch-and-assign-crew/${selectedFlight}`, {\n        method: 'GET',\n      });\n      const data = await response.json();\n      setGlobalSelectedFlight(selectedFlightData);\n      navigate(`/home/${selectedFlight}`);\n    } catch (error) {\n      console.error('Error assigning crew:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Select Flight</h2>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"flights\">Choose a flight:</label>\n        <select id=\"flights\" value={selectedFlight} onChange={handleSelection} required>\n          <option value=\"\" disabled>Select a flight</option>\n          {flights.map((flight) => (\n            <option key={flight.flight_number} value={flight.flight_number}>\n              {flight.flight_number} - {flight.source_city} to {flight.destination_city}\n            </option>\n          ))}\n        </select>\n        <button type=\"submit\">Confirm</button>\n      </form>\n    </div>\n  );\n};\n\nexport default SelectFlight;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAES,iBAAiB,EAAEE;EAAwB,CAAC,GAAGV,SAAS,CAAC,CAAC;EAElEF,SAAS,CAAC,MAAM;IACd,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAmD,CAAC;QACjF,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCT,UAAU,CAACQ,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAEDL,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,eAAe,GAAIC,CAAC,IAAK;IAC7BX,iBAAiB,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IAChCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAI,CAAChB,cAAc,EAAE;IAErB,IAAI;MACF,MAAMiB,kBAAkB,GAAGnB,OAAO,CAACoB,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,aAAa,KAAKpB,cAAc,CAAC;MAC1F,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAE,uDAAsDN,cAAe,EAAC,EAAE;QACpGqB,MAAM,EAAE;MACV,CAAC,CAAC;MACF,MAAMd,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,uBAAuB,CAACc,kBAAkB,CAAC;MAC3Cf,QAAQ,CAAE,SAAQF,cAAe,EAAC,CAAC;IACrC,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACEd,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB/B,OAAA;MAAMgC,QAAQ,EAAEZ,YAAa;MAAAO,QAAA,gBAC3B3B,OAAA;QAAOiC,OAAO,EAAC,SAAS;QAAAN,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjD/B,OAAA;QAAQkC,EAAE,EAAC,SAAS;QAACf,KAAK,EAAEd,cAAe;QAAC8B,QAAQ,EAAEnB,eAAgB;QAACoB,QAAQ;QAAAT,QAAA,gBAC7E3B,OAAA;UAAQmB,KAAK,EAAC,EAAE;UAACkB,QAAQ;UAAAV,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACjD5B,OAAO,CAACmC,GAAG,CAAEd,MAAM,iBAClBxB,OAAA;UAAmCmB,KAAK,EAAEK,MAAM,CAACC,aAAc;UAAAE,QAAA,GAC5DH,MAAM,CAACC,aAAa,EAAC,KAAG,EAACD,MAAM,CAACe,WAAW,EAAC,MAAI,EAACf,MAAM,CAACgB,gBAAgB;QAAA,GAD9DhB,MAAM,CAACC,aAAa;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEzB,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACT/B,OAAA;QAAQyC,IAAI,EAAC,QAAQ;QAAAd,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA1DID,YAAY;EAAA,QAGCJ,WAAW,EAC2BC,SAAS;AAAA;AAAA4C,EAAA,GAJ5DzC,YAAY;AA4DlB,eAAeA,YAAY;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}