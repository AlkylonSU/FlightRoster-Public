{"ast":null,"code":"// // import React, { useState } from 'react';\n// // import axios from 'axios';\n// // import { Button, TextField, Box, Typography, Container } from '@mui/material';\n// // const Login = () => {\n// //     const [username, setUsername] = useState('');\n// //     const [password, setPassword] = useState('');\n// //     const [error, setError] = useState('');\n// //     const handleLogin = async (event) => {\n// //         event.preventDefault();\n// //         try {\n// //             const response = await axios.post('http://localhost:8080/backend/login/', {\n// //                 username: username,\n// //                 password: password\n// //             });\n// //             const token = response.data.token;\n// //             localStorage.setItem('token', token);\n// //             window.location.href = '/select-flight'; // Change '/dashboard' to your desired route\n// //         } catch (error) {\n// //             setError('Invalid username or password');\n// //         }\n// //     };\n// //     return (\n// //         <Container component=\"main\" maxWidth=\"xs\">\n// //             <Box\n// //                 sx={{\n// //                     marginTop: 8,\n// //                     display: 'flex',\n// //                     flexDirection: 'column',\n// //                     alignItems: 'center',\n// //                 }}\n// //             >\n// //                 <Typography component=\"h1\" variant=\"h5\">\n// //                     {/* Sign in */}\n// //                     Log in to your account\n// //                 </Typography>\n// //                 <Box component=\"form\" onSubmit={handleLogin} noValidate sx={{ mt: 1 }}>\n// //                     <TextField\n// //                         margin=\"normal\"\n// //                         required\n// //                         fullWidth\n// //                         id=\"username\"\n// //                         label=\"Username\"\n// //                         name=\"username\"\n// //                         autoComplete=\"username\"\n// //                         autoFocus\n// //                         value={username}\n// //                         onChange={(e) => setUsername(e.target.value)}\n// //                     />\n// //                     <TextField\n// //                         margin=\"normal\"\n// //                         required\n// //                         fullWidth\n// //                         name=\"password\"\n// //                         label=\"Password\"\n// //                         type=\"password\"\n// //                         id=\"password\"\n// //                         autoComplete=\"current-password\"\n// //                         value={password}\n// //                         onChange={(e) => setPassword(e.target.value)}\n// //                     />\n// //                     <Button\n// //                         type=\"submit\"\n// //                         fullWidth\n// //                         variant=\"contained\"\n// //                         sx={{ mt: 3, mb: 2 }}\n// //                     >\n// //                         Sign In\n// //                     </Button>\n// //                     {error && (\n// //                         <Typography variant=\"body2\" color=\"error\" align=\"center\">\n// //                             {error}\n// //                         </Typography>\n// //                     )}\n// //                 </Box>\n// //             </Box>\n// //         </Container>\n// //     );\n// // };\n// // export default Login;\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { Button, TextField, Box, Typography, Container, CircularProgress } from '@mui/material';\n// const Login = () => {\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [error, setError] = useState('');\n//     const [loading, setLoading] = useState(false);\n//     const handleLogin = async (event) => {\n//         event.preventDefault();\n//         setLoading(true);\n//         setError('');\n//         try {\n//             const response = await axios.post('http://localhost:8080/backend/login/', {\n//                 username: username,\n//                 password: password\n//             });\n//             const token = response.data.token;\n//             localStorage.setItem('token', token);\n//             window.location.href = '/select-flight'; // Change '/dashboard' to your desired route\n//         } catch (error) {\n//             setLoading(false);\n//             if (error.response && error.response.status === 401) {\n//                 setError('Invalid username or password');\n//             } else {\n//                 setError('An error occurred. Please try again later.');\n//             }\n//         }\n//     };\n//     return (\n//         <Container component=\"main\" maxWidth=\"sm\">\n//             <Box\n//                 sx={{\n//                     display: 'flex',\n//                     flexDirection: 'column',\n//                     alignItems: 'center',\n//                     justifyContent: 'center',\n//                     minHeight: '100vh',\n//                 }}\n//             >\n//                 <Typography component=\"h1\" variant=\"h4\" sx={{ fontSize: '2rem', fontWeight: 'bold' }}>\n//                     Log in to your account\n//                 </Typography>\n//                 <Box component=\"form\" onSubmit={handleLogin} noValidate sx={{ mt: 3, width: '100%' }}>\n//                     <TextField\n//                         margin=\"normal\"\n//                         required\n//                         fullWidth\n//                         id=\"username\"\n//                         label=\"Username\"\n//                         name=\"username\"\n//                         autoComplete=\"username\"\n//                         autoFocus\n//                         value={username}\n//                         onChange={(e) => setUsername(e.target.value)}\n//                         aria-label=\"Username\"\n//                         InputLabelProps={{ style: { fontSize: '1.2rem' } }}\n//                         inputProps={{ style: { fontSize: '1.2rem', padding: '14px' } }}\n//                     />\n//                     <TextField\n//                         margin=\"normal\"\n//                         required\n//                         fullWidth\n//                         name=\"password\"\n//                         label=\"Password\"\n//                         type=\"password\"\n//                         id=\"password\"\n//                         autoComplete=\"current-password\"\n//                         value={password}\n//                         onChange={(e) => setPassword(e.target.value)}\n//                         aria-label=\"Password\"\n//                         InputLabelProps={{ style: { fontSize: '1.2rem' } }}\n//                         inputProps={{ style: { fontSize: '1.2rem', padding: '14px' } }}\n//                     />\n//                     <Button\n//                         type=\"submit\"\n//                         fullWidth\n//                         variant=\"contained\"\n//                         sx={{ \n//                             mt: 4, \n//                             mb: 2, \n//                             padding: '16px 0', \n//                             borderRadius: '20px', \n//                             fontSize: '1.2rem',\n//                             '&:hover': {\n//                                 backgroundColor: '#0044cc', // Change this to the color you want on hover\n//                             }\n//                         }}\n//                         disabled={loading}\n//                     >\n//                         {loading ? <CircularProgress size={24} /> : 'Log in'}\n//                     </Button>\n//                     {error && (\n//                         <Typography variant=\"body2\" color=\"error\" align=\"center\" sx={{ fontSize: '1rem' }}>\n//                             {error}\n//                         </Typography>\n//                     )}\n//                 </Box>\n//             </Box>\n//         </Container>\n//     );\n// };\n// export default Login;\nimport React,{useState}from'react';import axios from'axios';import{Button,TextField,Box,Typography,Container,CssBaseline,CircularProgress}from'@mui/material';import{createTheme,ThemeProvider}from'@mui/material/styles';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const theme=createTheme({palette:{primary:{main:'#1976d2'},secondary:{main:'#6C757D'},info:{main:'#17A2B8'}},typography:{fontFamily:'\"Roboto\", \"Helvetica\", \"Arial\", sans-serif'}});const Login=()=>{const[username,setUsername]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState('');const[loading,setLoading]=useState(false);const handleLogin=async event=>{event.preventDefault();setLoading(true);setError('');try{const response=await axios.post('http://localhost:8080/backend/login/',{username:username,password:password});const token=response.data.token;localStorage.setItem('token',token);window.location.href='/select-flight';// Change '/dashboard' to your desired route\n}catch(error){setLoading(false);if(error.response&&error.response.status===401){setError('Invalid username or password');}else{setError('An error occurred. Please try again later.');}}};return/*#__PURE__*/_jsxs(ThemeProvider,{theme:theme,children:[/*#__PURE__*/_jsx(CssBaseline,{}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',minHeight:'100vh',background:'linear-gradient(180deg, #f0f4ff 0%, #d0e2ff 100%)',padding:6,boxShadow:'0 3px 5px 2px rgba(0, 0, 0, 0.1)',textAlign:'center'},children:/*#__PURE__*/_jsx(Container,{component:\"main\",maxWidth:\"md\",children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',background:'white',padding:4,borderRadius:2,boxShadow:'0 3px 5px 2px rgba(0, 0, 0, 0.1)',width:'100%',minHeight:'50vh'},children:[/*#__PURE__*/_jsx(Typography,{component:\"h1\",variant:\"h4\",sx:{fontSize:'2rem',fontWeight:'bold',color:'textSecondary'},children:\"Log in to your account\"}),/*#__PURE__*/_jsxs(Box,{component:\"form\",onSubmit:handleLogin,noValidate:true,sx:{mt:3,width:'100%'},children:[/*#__PURE__*/_jsx(TextField,{margin:\"normal\",required:true,fullWidth:true,id:\"username\",label:\"Username\",name:\"username\",autoComplete:\"username\",autoFocus:true,value:username,onChange:e=>setUsername(e.target.value),\"aria-label\":\"Username\",InputLabelProps:{style:{fontSize:'1.2rem'}},inputProps:{style:{fontSize:'1.2rem',padding:'14px'}}}),/*#__PURE__*/_jsx(TextField,{margin:\"normal\",required:true,fullWidth:true,name:\"password\",label:\"Password\",type:\"password\",id:\"password\",autoComplete:\"current-password\",value:password,onChange:e=>setPassword(e.target.value),\"aria-label\":\"Password\",InputLabelProps:{style:{fontSize:'1.2rem'}},inputProps:{style:{fontSize:'1.2rem',padding:'14px'}}}),/*#__PURE__*/_jsx(Button,{type:\"submit\",fullWidth:true,variant:\"contained\",sx:{mt:4,mb:2,padding:'16px 0',borderRadius:'20px',fontSize:'1.2rem',bgcolor:'primary.main',color:'white','&:hover':{bgcolor:'primary.dark'},transition:'all 0.3s ease'},disabled:loading,children:loading?/*#__PURE__*/_jsx(CircularProgress,{size:24}):'Log in'}),error&&/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"error\",align:\"center\",sx:{fontSize:'1rem'},children:error})]})]})})})]});};export default Login;","map":{"version":3,"names":["React","useState","axios","Button","TextField","Box","Typography","Container","CssBaseline","CircularProgress","createTheme","ThemeProvider","jsx","_jsx","jsxs","_jsxs","theme","palette","primary","main","secondary","info","typography","fontFamily","Login","username","setUsername","password","setPassword","error","setError","loading","setLoading","handleLogin","event","preventDefault","response","post","token","data","localStorage","setItem","window","location","href","status","children","sx","display","flexDirection","alignItems","justifyContent","minHeight","background","padding","boxShadow","textAlign","component","maxWidth","borderRadius","width","variant","fontSize","fontWeight","color","onSubmit","noValidate","mt","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","value","onChange","e","target","InputLabelProps","style","inputProps","type","mb","bgcolor","transition","disabled","size","align"],"sources":["D:/Projects/FlightRoster/Main System/frontend/src/components/Login.js"],"sourcesContent":["// // import React, { useState } from 'react';\r\n// // import axios from 'axios';\r\n// // import { Button, TextField, Box, Typography, Container } from '@mui/material';\r\n\r\n// // const Login = () => {\r\n// //     const [username, setUsername] = useState('');\r\n// //     const [password, setPassword] = useState('');\r\n// //     const [error, setError] = useState('');\r\n\r\n// //     const handleLogin = async (event) => {\r\n// //         event.preventDefault();\r\n// //         try {\r\n// //             const response = await axios.post('http://localhost:8080/backend/login/', {\r\n// //                 username: username,\r\n// //                 password: password\r\n// //             });\r\n// //             const token = response.data.token;\r\n// //             localStorage.setItem('token', token);\r\n// //             window.location.href = '/select-flight'; // Change '/dashboard' to your desired route\r\n// //         } catch (error) {\r\n// //             setError('Invalid username or password');\r\n// //         }\r\n// //     };\r\n\r\n// //     return (\r\n// //         <Container component=\"main\" maxWidth=\"xs\">\r\n// //             <Box\r\n// //                 sx={{\r\n// //                     marginTop: 8,\r\n// //                     display: 'flex',\r\n// //                     flexDirection: 'column',\r\n// //                     alignItems: 'center',\r\n// //                 }}\r\n// //             >\r\n// //                 <Typography component=\"h1\" variant=\"h5\">\r\n// //                     {/* Sign in */}\r\n// //                     Log in to your account\r\n\r\n// //                 </Typography>\r\n// //                 <Box component=\"form\" onSubmit={handleLogin} noValidate sx={{ mt: 1 }}>\r\n// //                     <TextField\r\n// //                         margin=\"normal\"\r\n// //                         required\r\n// //                         fullWidth\r\n// //                         id=\"username\"\r\n// //                         label=\"Username\"\r\n// //                         name=\"username\"\r\n// //                         autoComplete=\"username\"\r\n// //                         autoFocus\r\n// //                         value={username}\r\n// //                         onChange={(e) => setUsername(e.target.value)}\r\n// //                     />\r\n// //                     <TextField\r\n// //                         margin=\"normal\"\r\n// //                         required\r\n// //                         fullWidth\r\n// //                         name=\"password\"\r\n// //                         label=\"Password\"\r\n// //                         type=\"password\"\r\n// //                         id=\"password\"\r\n// //                         autoComplete=\"current-password\"\r\n// //                         value={password}\r\n// //                         onChange={(e) => setPassword(e.target.value)}\r\n// //                     />\r\n// //                     <Button\r\n// //                         type=\"submit\"\r\n// //                         fullWidth\r\n// //                         variant=\"contained\"\r\n// //                         sx={{ mt: 3, mb: 2 }}\r\n// //                     >\r\n// //                         Sign In\r\n// //                     </Button>\r\n// //                     {error && (\r\n// //                         <Typography variant=\"body2\" color=\"error\" align=\"center\">\r\n// //                             {error}\r\n// //                         </Typography>\r\n// //                     )}\r\n// //                 </Box>\r\n// //             </Box>\r\n// //         </Container>\r\n// //     );\r\n// // };\r\n\r\n// // export default Login;\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import { Button, TextField, Box, Typography, Container, CircularProgress } from '@mui/material';\r\n\r\n// const Login = () => {\r\n//     const [username, setUsername] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [error, setError] = useState('');\r\n//     const [loading, setLoading] = useState(false);\r\n\r\n//     const handleLogin = async (event) => {\r\n//         event.preventDefault();\r\n//         setLoading(true);\r\n//         setError('');\r\n//         try {\r\n//             const response = await axios.post('http://localhost:8080/backend/login/', {\r\n//                 username: username,\r\n//                 password: password\r\n//             });\r\n//             const token = response.data.token;\r\n//             localStorage.setItem('token', token);\r\n//             window.location.href = '/select-flight'; // Change '/dashboard' to your desired route\r\n//         } catch (error) {\r\n//             setLoading(false);\r\n//             if (error.response && error.response.status === 401) {\r\n//                 setError('Invalid username or password');\r\n//             } else {\r\n//                 setError('An error occurred. Please try again later.');\r\n//             }\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <Container component=\"main\" maxWidth=\"sm\">\r\n//             <Box\r\n//                 sx={{\r\n//                     display: 'flex',\r\n//                     flexDirection: 'column',\r\n//                     alignItems: 'center',\r\n//                     justifyContent: 'center',\r\n//                     minHeight: '100vh',\r\n//                 }}\r\n//             >\r\n//                 <Typography component=\"h1\" variant=\"h4\" sx={{ fontSize: '2rem', fontWeight: 'bold' }}>\r\n//                     Log in to your account\r\n//                 </Typography>\r\n//                 <Box component=\"form\" onSubmit={handleLogin} noValidate sx={{ mt: 3, width: '100%' }}>\r\n//                     <TextField\r\n//                         margin=\"normal\"\r\n//                         required\r\n//                         fullWidth\r\n//                         id=\"username\"\r\n//                         label=\"Username\"\r\n//                         name=\"username\"\r\n//                         autoComplete=\"username\"\r\n//                         autoFocus\r\n//                         value={username}\r\n//                         onChange={(e) => setUsername(e.target.value)}\r\n//                         aria-label=\"Username\"\r\n//                         InputLabelProps={{ style: { fontSize: '1.2rem' } }}\r\n//                         inputProps={{ style: { fontSize: '1.2rem', padding: '14px' } }}\r\n//                     />\r\n//                     <TextField\r\n//                         margin=\"normal\"\r\n//                         required\r\n//                         fullWidth\r\n//                         name=\"password\"\r\n//                         label=\"Password\"\r\n//                         type=\"password\"\r\n//                         id=\"password\"\r\n//                         autoComplete=\"current-password\"\r\n//                         value={password}\r\n//                         onChange={(e) => setPassword(e.target.value)}\r\n//                         aria-label=\"Password\"\r\n//                         InputLabelProps={{ style: { fontSize: '1.2rem' } }}\r\n//                         inputProps={{ style: { fontSize: '1.2rem', padding: '14px' } }}\r\n//                     />\r\n//                     <Button\r\n//                         type=\"submit\"\r\n//                         fullWidth\r\n//                         variant=\"contained\"\r\n//                         sx={{ \r\n//                             mt: 4, \r\n//                             mb: 2, \r\n//                             padding: '16px 0', \r\n//                             borderRadius: '20px', \r\n//                             fontSize: '1.2rem',\r\n//                             '&:hover': {\r\n//                                 backgroundColor: '#0044cc', // Change this to the color you want on hover\r\n//                             }\r\n//                         }}\r\n//                         disabled={loading}\r\n//                     >\r\n//                         {loading ? <CircularProgress size={24} /> : 'Log in'}\r\n//                     </Button>\r\n//                     {error && (\r\n//                         <Typography variant=\"body2\" color=\"error\" align=\"center\" sx={{ fontSize: '1rem' }}>\r\n//                             {error}\r\n//                         </Typography>\r\n//                     )}\r\n//                 </Box>\r\n//             </Box>\r\n//         </Container>\r\n//     );\r\n// };\r\n\r\n// export default Login;\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Button, TextField, Box, Typography, Container, CssBaseline, CircularProgress } from '@mui/material';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#1976d2',\r\n    },\r\n    secondary: {\r\n      main: '#6C757D',\r\n    },\r\n    info: {\r\n      main: '#17A2B8',\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n  },\r\n});\r\n\r\nconst Login = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleLogin = async (event) => {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n        setError('');\r\n        try {\r\n            const response = await axios.post('http://localhost:8080/backend/login/', {\r\n                username: username,\r\n                password: password\r\n            });\r\n            const token = response.data.token;\r\n            localStorage.setItem('token', token);\r\n            window.location.href = '/select-flight'; // Change '/dashboard' to your desired route\r\n        } catch (error) {\r\n            setLoading(false);\r\n            if (error.response && error.response.status === 401) {\r\n                setError('Invalid username or password');\r\n            } else {\r\n                setError('An error occurred. Please try again later.');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    minHeight: '100vh',\r\n                    background: 'linear-gradient(180deg, #f0f4ff 0%, #d0e2ff 100%)',\r\n                    padding: 6,\r\n                    boxShadow: '0 3px 5px 2px rgba(0, 0, 0, 0.1)',\r\n                    textAlign: 'center',\r\n                }}\r\n            >\r\n                <Container component=\"main\" maxWidth=\"md\">\r\n                    <Box\r\n                        sx={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            background: 'white',\r\n                            padding: 4,\r\n                            borderRadius: 2,\r\n                            boxShadow: '0 3px 5px 2px rgba(0, 0, 0, 0.1)',\r\n                            width: '100%',\r\n                            minHeight: '50vh', \r\n\r\n                        }}\r\n                    >\r\n                        <Typography component=\"h1\" variant=\"h4\" sx={{ fontSize: '2rem', fontWeight: 'bold', color: 'textSecondary' }}>\r\n                            Log in to your account\r\n                        </Typography>\r\n                        <Box component=\"form\" onSubmit={handleLogin} noValidate sx={{ mt: 3, width: '100%' }}>\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                label=\"Username\"\r\n                                name=\"username\"\r\n                                autoComplete=\"username\"\r\n                                autoFocus\r\n                                value={username}\r\n                                onChange={(e) => setUsername(e.target.value)}\r\n                                aria-label=\"Username\"\r\n                                InputLabelProps={{ style: { fontSize: '1.2rem' } }}\r\n                                inputProps={{ style: { fontSize: '1.2rem', padding: '14px' } }}\r\n                            />\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                aria-label=\"Password\"\r\n                                InputLabelProps={{ style: { fontSize: '1.2rem' } }}\r\n                                inputProps={{ style: { fontSize: '1.2rem', padding: '14px' } }}\r\n                            />\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                sx={{ \r\n                                    mt: 4, \r\n                                    mb: 2, \r\n                                    padding: '16px 0', \r\n                                    borderRadius: '20px', \r\n                                    fontSize: '1.2rem',\r\n                                    bgcolor: 'primary.main',\r\n                                    color: 'white',\r\n                                    '&:hover': { bgcolor: 'primary.dark' },\r\n                                    transition: 'all 0.3s ease',\r\n                                }}\r\n                                disabled={loading}\r\n                            >\r\n                                {loading ? <CircularProgress size={24} /> : 'Log in'}\r\n                            </Button>\r\n                            {error && (\r\n                                <Typography variant=\"body2\" color=\"error\" align=\"center\" sx={{ fontSize: '1rem' }}>\r\n                                    {error}\r\n                                </Typography>\r\n                            )}\r\n                        </Box>\r\n                    </Box>\r\n                </Container>\r\n            </Box>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}