{"ast":null,"code":"// // import React, { useState, useEffect } from 'react';\n// // import { useNavigate } from 'react-router-dom';\n// // import { useFlight } from '../context/FlightContext';\n\n// // const SelectFlight = () => {\n// //   const [flights, setFlights] = useState([]);\n// //   const [selectedFlight, setSelectedFlight] = useState('');\n// //   const navigate = useNavigate();\n// //   const { setSelectedFlight: setGlobalSelectedFlight } = useFlight();\n\n// //   useEffect(() => {\n// //     const fetchFlights = async () => {\n// //       try {\n// //         const response = await fetch('http://localhost:8000/api/flightinfo/all-flights/');\n// //         const data = await response.json();\n// //         setFlights(data);\n// //       } catch (error) {\n// //         console.error('Error fetching flights:', error);\n// //       }\n// //     };\n\n// //     fetchFlights();\n// //   }, []);\n\n// //   const handleSelection = (e) => {\n// //     setSelectedFlight(e.target.value);\n// //   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     if (!selectedFlight) return;\n\n// //     try {\n// //       const selectedFlightData = flights.find(flight => flight.flight_number === selectedFlight);\n// //       const response = await fetch(`http://localhost:8080/backend/fetch-and-assign-crew/${selectedFlight}`, {\n// //         method: 'GET',\n// //       });\n// //       const data = await response.json();\n// //       setGlobalSelectedFlight(selectedFlightData);\n// //       navigate(`/home/${selectedFlight}`);\n// //     } catch (error) {\n// //       console.error('Error assigning crew:', error);\n// //     }\n// //   };\n\n// //   const handleCreateFlight = () => {\n// //     navigate('/create-flight');\n// //   };\n\n// //   const styles = {\n// //     container: {\n// //       display: 'flex',\n// //       justifyContent: 'center',\n// //       alignItems: 'center',\n// //       height: '100vh',\n// //       backgroundColor: '#f5f5f5',\n// //     },\n// //     content: {\n// //       maxWidth: '600px',\n// //       width: '100%',\n// //       padding: '40px',\n// //       backgroundColor: 'white',\n// //       borderRadius: '10px',\n// //       boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n// //       textAlign: 'center',\n// //     },\n// //     header: {\n// //       color: '#1976d2',\n// //       fontSize: '2em',\n// //     },\n// //     form: {\n// //       display: 'flex',\n// //       flexDirection: 'column',\n// //       alignItems: 'center',\n// //     },\n// //     label: {\n// //       marginBottom: '10px',\n// //       color: '#333',\n// //       fontWeight: 'bold',\n// //       fontSize: '1.2em',\n// //     },\n// //     select: {\n// //       width: '100%',\n// //       padding: '15px',\n// //       marginBottom: '20px',\n// //       border: '1px solid #ddd',\n// //       borderRadius: '5px',\n// //       backgroundColor: '#f9f9f9',\n// //       fontSize: '1em',\n// //     },\n// //     button: {\n// //       backgroundColor: '#1976d2',\n// //       color: 'white',\n// //       border: 'none',\n// //       padding: '15px 30px',\n// //       borderRadius: '5px',\n// //       cursor: 'pointer',\n// //       fontSize: '1.2em',\n// //       transition: 'background-color 0.3s',\n// //       marginBottom: '10px',\n// //     },\n// //     buttonHover: {\n// //       backgroundColor: '#145ca8',\n// //     },\n// //     createButton: {\n// //       backgroundColor: '#4caf50',\n// //     },\n// //     createButtonHover: {\n// //       backgroundColor: '#388e3c',\n// //     },\n// //   };\n\n// //   return (\n// //     <div style={styles.container}>\n// //       <div style={styles.content}>\n// //         <h2 style={styles.header}>Select Flight</h2>\n// //         <form onSubmit={handleSubmit} style={styles.form}>\n// //           <label htmlFor=\"flights\" style={styles.label}>Choose a flight:</label>\n// //           <select id=\"flights\" value={selectedFlight} onChange={handleSelection} required style={styles.select}>\n// //             <option value=\"\" disabled>Select a flight</option>\n// //             {flights.map((flight) => (\n// //               <option key={flight.flight_number} value={flight.flight_number}>\n// //                 {flight.flight_number} - {flight.source_city} to {flight.destination_city}\n// //               </option>\n// //             ))}\n// //           </select>\n// //           <button\n// //             type=\"submit\"\n// //             style={styles.button}\n// //             onMouseOver={(e) => (e.target.style.backgroundColor = styles.buttonHover.backgroundColor)}\n// //             onMouseOut={(e) => (e.target.style.backgroundColor = styles.button.backgroundColor)}\n// //           >\n// //             Confirm\n// //           </button>\n// //         </form>\n// //         <button\n// //           type=\"button\"\n// //           onClick={handleCreateFlight}\n// //           style={{ ...styles.button, ...styles.createButton }}\n// //           onMouseOver={(e) => (e.target.style.backgroundColor = styles.createButtonHover.backgroundColor)}\n// //           onMouseOut={(e) => (e.target.style.backgroundColor = styles.createButton.backgroundColor)}\n// //         >\n// //           Create New Flight\n// //         </button>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default SelectFlight;\n\n// import React, { useState, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { useFlight } from '../context/FlightContext';\n\n// const SelectFlight = () => {\n//   const [flights, setFlights] = useState([]);\n//   const [selectedFlight, setSelectedFlight] = useState('');\n//   const navigate = useNavigate();\n//   const { setSelectedFlight: setGlobalSelectedFlight } = useFlight();\n\n//   useEffect(() => {\n//     const fetchFlights = async () => {\n//       try {\n//         const response = await fetch('http://localhost:8000/api/flightinfo/all-flights/');\n//         const data = await response.json();\n//         setFlights(data);\n//       } catch (error) {\n//         console.error('Error fetching flights:', error);\n//       }\n//     };\n\n//     fetchFlights();\n//   }, []);\n\n//   const handleSelection = (e) => {\n//     setSelectedFlight(e.target.value);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!selectedFlight) return;\n\n//     try {\n//       const selectedFlightData = flights.find(flight => flight.flight_number === selectedFlight);\n//       const response = await fetch(`http://localhost:8080/backend/fetch-and-assign-crew/${selectedFlight}`, {\n//         method: 'GET',\n//       });\n//       const data = await response.json();\n//       setGlobalSelectedFlight(selectedFlightData);\n//       navigate(`/home/${selectedFlight}`);\n//     } catch (error) {\n//       console.error('Error assigning crew:', error);\n//     }\n//   };\n\n//   const handleCreateFlight = () => {\n//     navigate('/create-flight');\n//   };\n\n//   const styles = {\n//     container: {\n//       display: 'flex',\n//       justifyContent: 'center',\n//       alignItems: 'center',\n//       height: '100vh',\n//       backgroundColor: '#e3f2fd', // Light blue background\n//     },\n//     content: {\n//       maxWidth: '600px',\n//       width: '100%',\n//       padding: '40px',\n//       backgroundColor: 'white',\n//       borderRadius: '10px',\n//       boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n//       textAlign: 'center',\n//     },\n//     header: {\n//       color: '#1976d2', // Blue header\n//       fontSize: '2em',\n//     },\n//     form: {\n//       display: 'flex',\n//       flexDirection: 'column',\n//       alignItems: 'center',\n//     },\n//     label: {\n//       marginBottom: '10px',\n//       color: '#333',\n//       fontWeight: 'bold',\n//       fontSize: '1.2em',\n//     },\n//     select: {\n//       width: '100%',\n//       padding: '15px',\n//       marginBottom: '20px',\n//       border: '1px solid #ddd',\n//       borderRadius: '5px',\n//       backgroundColor: '#f9f9f9',\n//       fontSize: '1em',\n//     },\n//     button: {\n//       backgroundColor: '#1976d2', // Blue button\n//       color: 'white',\n//       border: 'none',\n//       padding: '15px 30px',\n//       borderRadius: '5px',\n//       cursor: 'pointer',\n//       fontSize: '1.2em',\n//       transition: 'background-color 0.3s',\n//       marginBottom: '10px',\n//     },\n//     buttonHover: {\n//       backgroundColor: '#145ca8', // Darker blue on hover\n//     },\n//     createButton: {\n//       backgroundColor: '#1976d2', // Blue button for create\n//       color: 'white',\n//     },\n//     createButtonHover: {\n//       backgroundColor: '#145ca8', // Darker blue on hover\n//     },\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       <div style={styles.content}>\n//         <h2 style={styles.header}>Select Flight</h2>\n//         <form onSubmit={handleSubmit} style={styles.form}>\n//           <label htmlFor=\"flights\" style={styles.label}>Choose a flight:</label>\n//           <select id=\"flights\" value={selectedFlight} onChange={handleSelection} required style={styles.select}>\n//             <option value=\"\" disabled>Select a flight</option>\n//             {flights.map((flight) => (\n//               <option key={flight.flight_number} value={flight.flight_number}>\n//                 {flight.flight_number} - {flight.source_city} to {flight.destination_city}\n//               </option>\n//             ))}\n//           </select>\n//           <button\n//             type=\"submit\"\n//             style={styles.button}\n//             onMouseOver={(e) => (e.target.style.backgroundColor = styles.buttonHover.backgroundColor)}\n//             onMouseOut={(e) => (e.target.style.backgroundColor = styles.button.backgroundColor)}\n//           >\n//             Confirm\n//           </button>\n//         </form>\n//         <button\n//           type=\"button\"\n//           onClick={handleCreateFlight}\n//           style={{ ...styles.button, ...styles.createButton }}\n//           onMouseOver={(e) => (e.target.style.backgroundColor = styles.createButtonHover.backgroundColor)}\n//           onMouseOut={(e) => (e.target.style.backgroundColor = styles.createButton.backgroundColor)}\n//         >\n//           Create New Flight\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SelectFlight;","map":{"version":3,"names":[],"sources":["/Users/hamza/Desktop/308/FlightRoster/Main System/frontend/src/components/SelectFlight.js"],"sourcesContent":["// // import React, { useState, useEffect } from 'react';\n// // import { useNavigate } from 'react-router-dom';\n// // import { useFlight } from '../context/FlightContext';\n\n// // const SelectFlight = () => {\n// //   const [flights, setFlights] = useState([]);\n// //   const [selectedFlight, setSelectedFlight] = useState('');\n// //   const navigate = useNavigate();\n// //   const { setSelectedFlight: setGlobalSelectedFlight } = useFlight();\n\n// //   useEffect(() => {\n// //     const fetchFlights = async () => {\n// //       try {\n// //         const response = await fetch('http://localhost:8000/api/flightinfo/all-flights/');\n// //         const data = await response.json();\n// //         setFlights(data);\n// //       } catch (error) {\n// //         console.error('Error fetching flights:', error);\n// //       }\n// //     };\n\n// //     fetchFlights();\n// //   }, []);\n\n// //   const handleSelection = (e) => {\n// //     setSelectedFlight(e.target.value);\n// //   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     if (!selectedFlight) return;\n\n// //     try {\n// //       const selectedFlightData = flights.find(flight => flight.flight_number === selectedFlight);\n// //       const response = await fetch(`http://localhost:8080/backend/fetch-and-assign-crew/${selectedFlight}`, {\n// //         method: 'GET',\n// //       });\n// //       const data = await response.json();\n// //       setGlobalSelectedFlight(selectedFlightData);\n// //       navigate(`/home/${selectedFlight}`);\n// //     } catch (error) {\n// //       console.error('Error assigning crew:', error);\n// //     }\n// //   };\n\n// //   const handleCreateFlight = () => {\n// //     navigate('/create-flight');\n// //   };\n\n// //   const styles = {\n// //     container: {\n// //       display: 'flex',\n// //       justifyContent: 'center',\n// //       alignItems: 'center',\n// //       height: '100vh',\n// //       backgroundColor: '#f5f5f5',\n// //     },\n// //     content: {\n// //       maxWidth: '600px',\n// //       width: '100%',\n// //       padding: '40px',\n// //       backgroundColor: 'white',\n// //       borderRadius: '10px',\n// //       boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n// //       textAlign: 'center',\n// //     },\n// //     header: {\n// //       color: '#1976d2',\n// //       fontSize: '2em',\n// //     },\n// //     form: {\n// //       display: 'flex',\n// //       flexDirection: 'column',\n// //       alignItems: 'center',\n// //     },\n// //     label: {\n// //       marginBottom: '10px',\n// //       color: '#333',\n// //       fontWeight: 'bold',\n// //       fontSize: '1.2em',\n// //     },\n// //     select: {\n// //       width: '100%',\n// //       padding: '15px',\n// //       marginBottom: '20px',\n// //       border: '1px solid #ddd',\n// //       borderRadius: '5px',\n// //       backgroundColor: '#f9f9f9',\n// //       fontSize: '1em',\n// //     },\n// //     button: {\n// //       backgroundColor: '#1976d2',\n// //       color: 'white',\n// //       border: 'none',\n// //       padding: '15px 30px',\n// //       borderRadius: '5px',\n// //       cursor: 'pointer',\n// //       fontSize: '1.2em',\n// //       transition: 'background-color 0.3s',\n// //       marginBottom: '10px',\n// //     },\n// //     buttonHover: {\n// //       backgroundColor: '#145ca8',\n// //     },\n// //     createButton: {\n// //       backgroundColor: '#4caf50',\n// //     },\n// //     createButtonHover: {\n// //       backgroundColor: '#388e3c',\n// //     },\n// //   };\n\n// //   return (\n// //     <div style={styles.container}>\n// //       <div style={styles.content}>\n// //         <h2 style={styles.header}>Select Flight</h2>\n// //         <form onSubmit={handleSubmit} style={styles.form}>\n// //           <label htmlFor=\"flights\" style={styles.label}>Choose a flight:</label>\n// //           <select id=\"flights\" value={selectedFlight} onChange={handleSelection} required style={styles.select}>\n// //             <option value=\"\" disabled>Select a flight</option>\n// //             {flights.map((flight) => (\n// //               <option key={flight.flight_number} value={flight.flight_number}>\n// //                 {flight.flight_number} - {flight.source_city} to {flight.destination_city}\n// //               </option>\n// //             ))}\n// //           </select>\n// //           <button\n// //             type=\"submit\"\n// //             style={styles.button}\n// //             onMouseOver={(e) => (e.target.style.backgroundColor = styles.buttonHover.backgroundColor)}\n// //             onMouseOut={(e) => (e.target.style.backgroundColor = styles.button.backgroundColor)}\n// //           >\n// //             Confirm\n// //           </button>\n// //         </form>\n// //         <button\n// //           type=\"button\"\n// //           onClick={handleCreateFlight}\n// //           style={{ ...styles.button, ...styles.createButton }}\n// //           onMouseOver={(e) => (e.target.style.backgroundColor = styles.createButtonHover.backgroundColor)}\n// //           onMouseOut={(e) => (e.target.style.backgroundColor = styles.createButton.backgroundColor)}\n// //         >\n// //           Create New Flight\n// //         </button>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default SelectFlight;\n\n// import React, { useState, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { useFlight } from '../context/FlightContext';\n\n// const SelectFlight = () => {\n//   const [flights, setFlights] = useState([]);\n//   const [selectedFlight, setSelectedFlight] = useState('');\n//   const navigate = useNavigate();\n//   const { setSelectedFlight: setGlobalSelectedFlight } = useFlight();\n\n//   useEffect(() => {\n//     const fetchFlights = async () => {\n//       try {\n//         const response = await fetch('http://localhost:8000/api/flightinfo/all-flights/');\n//         const data = await response.json();\n//         setFlights(data);\n//       } catch (error) {\n//         console.error('Error fetching flights:', error);\n//       }\n//     };\n\n//     fetchFlights();\n//   }, []);\n\n//   const handleSelection = (e) => {\n//     setSelectedFlight(e.target.value);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!selectedFlight) return;\n\n//     try {\n//       const selectedFlightData = flights.find(flight => flight.flight_number === selectedFlight);\n//       const response = await fetch(`http://localhost:8080/backend/fetch-and-assign-crew/${selectedFlight}`, {\n//         method: 'GET',\n//       });\n//       const data = await response.json();\n//       setGlobalSelectedFlight(selectedFlightData);\n//       navigate(`/home/${selectedFlight}`);\n//     } catch (error) {\n//       console.error('Error assigning crew:', error);\n//     }\n//   };\n\n//   const handleCreateFlight = () => {\n//     navigate('/create-flight');\n//   };\n\n//   const styles = {\n//     container: {\n//       display: 'flex',\n//       justifyContent: 'center',\n//       alignItems: 'center',\n//       height: '100vh',\n//       backgroundColor: '#e3f2fd', // Light blue background\n//     },\n//     content: {\n//       maxWidth: '600px',\n//       width: '100%',\n//       padding: '40px',\n//       backgroundColor: 'white',\n//       borderRadius: '10px',\n//       boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n//       textAlign: 'center',\n//     },\n//     header: {\n//       color: '#1976d2', // Blue header\n//       fontSize: '2em',\n//     },\n//     form: {\n//       display: 'flex',\n//       flexDirection: 'column',\n//       alignItems: 'center',\n//     },\n//     label: {\n//       marginBottom: '10px',\n//       color: '#333',\n//       fontWeight: 'bold',\n//       fontSize: '1.2em',\n//     },\n//     select: {\n//       width: '100%',\n//       padding: '15px',\n//       marginBottom: '20px',\n//       border: '1px solid #ddd',\n//       borderRadius: '5px',\n//       backgroundColor: '#f9f9f9',\n//       fontSize: '1em',\n//     },\n//     button: {\n//       backgroundColor: '#1976d2', // Blue button\n//       color: 'white',\n//       border: 'none',\n//       padding: '15px 30px',\n//       borderRadius: '5px',\n//       cursor: 'pointer',\n//       fontSize: '1.2em',\n//       transition: 'background-color 0.3s',\n//       marginBottom: '10px',\n//     },\n//     buttonHover: {\n//       backgroundColor: '#145ca8', // Darker blue on hover\n//     },\n//     createButton: {\n//       backgroundColor: '#1976d2', // Blue button for create\n//       color: 'white',\n//     },\n//     createButtonHover: {\n//       backgroundColor: '#145ca8', // Darker blue on hover\n//     },\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       <div style={styles.content}>\n//         <h2 style={styles.header}>Select Flight</h2>\n//         <form onSubmit={handleSubmit} style={styles.form}>\n//           <label htmlFor=\"flights\" style={styles.label}>Choose a flight:</label>\n//           <select id=\"flights\" value={selectedFlight} onChange={handleSelection} required style={styles.select}>\n//             <option value=\"\" disabled>Select a flight</option>\n//             {flights.map((flight) => (\n//               <option key={flight.flight_number} value={flight.flight_number}>\n//                 {flight.flight_number} - {flight.source_city} to {flight.destination_city}\n//               </option>\n//             ))}\n//           </select>\n//           <button\n//             type=\"submit\"\n//             style={styles.button}\n//             onMouseOver={(e) => (e.target.style.backgroundColor = styles.buttonHover.backgroundColor)}\n//             onMouseOut={(e) => (e.target.style.backgroundColor = styles.button.backgroundColor)}\n//           >\n//             Confirm\n//           </button>\n//         </form>\n//         <button\n//           type=\"button\"\n//           onClick={handleCreateFlight}\n//           style={{ ...styles.button, ...styles.createButton }}\n//           onMouseOver={(e) => (e.target.style.backgroundColor = styles.createButtonHover.backgroundColor)}\n//           onMouseOut={(e) => (e.target.style.backgroundColor = styles.createButton.backgroundColor)}\n//         >\n//           Create New Flight\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SelectFlight;\n\n\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}