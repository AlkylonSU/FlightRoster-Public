{"ast":null,"code":"// // import React, { useState, useEffect } from 'react';\n// // import { useNavigate } from 'react-router-dom';\n// // import { useFlight } from '../context/FlightContext';\n// // const SelectFlight = () => {\n// //   const [flights, setFlights] = useState([]);\n// //   const [selectedFlight, setSelectedFlight] = useState('');\n// //   const navigate = useNavigate();\n// //   const { setSelectedFlight: setGlobalSelectedFlight } = useFlight();\n// //   useEffect(() => {\n// //     const fetchFlights = async () => {\n// //       try {\n// //         const response = await fetch('http://localhost:8000/api/flightinfo/all-flights/');\n// //         const data = await response.json();\n// //         setFlights(data);\n// //       } catch (error) {\n// //         console.error('Error fetching flights:', error);\n// //       }\n// //     };\n// //     fetchFlights();\n// //   }, []);\n// //   const handleSelection = (e) => {\n// //     setSelectedFlight(e.target.value);\n// //   };\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     if (!selectedFlight) return;\n// //     try {\n// //       const selectedFlightData = flights.find(flight => flight.flight_number === selectedFlight);\n// //       const response = await fetch(`http://localhost:8080/backend/fetch-and-assign-crew/${selectedFlight}`, {\n// //         method: 'GET',\n// //       });\n// //       const data = await response.json();\n// //       setGlobalSelectedFlight(selectedFlightData);\n// //       navigate(`/home/${selectedFlight}`);\n// //     } catch (error) {\n// //       console.error('Error assigning crew:', error);\n// //     }\n// //   };\n// //   const handleCreateFlight = () => {\n// //     navigate('/create-flight');\n// //   };\n// //   const styles = {\n// //     container: {\n// //       display: 'flex',\n// //       justifyContent: 'center',\n// //       alignItems: 'center',\n// //       height: '100vh',\n// //       backgroundColor: '#f5f5f5',\n// //     },\n// //     content: {\n// //       maxWidth: '600px',\n// //       width: '100%',\n// //       padding: '40px',\n// //       backgroundColor: 'white',\n// //       borderRadius: '10px',\n// //       boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n// //       textAlign: 'center',\n// //     },\n// //     header: {\n// //       color: '#1976d2',\n// //       fontSize: '2em',\n// //     },\n// //     form: {\n// //       display: 'flex',\n// //       flexDirection: 'column',\n// //       alignItems: 'center',\n// //     },\n// //     label: {\n// //       marginBottom: '10px',\n// //       color: '#333',\n// //       fontWeight: 'bold',\n// //       fontSize: '1.2em',\n// //     },\n// //     select: {\n// //       width: '100%',\n// //       padding: '15px',\n// //       marginBottom: '20px',\n// //       border: '1px solid #ddd',\n// //       borderRadius: '5px',\n// //       backgroundColor: '#f9f9f9',\n// //       fontSize: '1em',\n// //     },\n// //     button: {\n// //       backgroundColor: '#1976d2',\n// //       color: 'white',\n// //       border: 'none',\n// //       padding: '15px 30px',\n// //       borderRadius: '5px',\n// //       cursor: 'pointer',\n// //       fontSize: '1.2em',\n// //       transition: 'background-color 0.3s',\n// //       marginBottom: '10px',\n// //     },\n// //     buttonHover: {\n// //       backgroundColor: '#145ca8',\n// //     },\n// //     createButton: {\n// //       backgroundColor: '#4caf50',\n// //     },\n// //     createButtonHover: {\n// //       backgroundColor: '#388e3c',\n// //     },\n// //   };\n// //   return (\n// //     <div style={styles.container}>\n// //       <div style={styles.content}>\n// //         <h2 style={styles.header}>Select Flight</h2>\n// //         <form onSubmit={handleSubmit} style={styles.form}>\n// //           <label htmlFor=\"flights\" style={styles.label}>Choose a flight:</label>\n// //           <select id=\"flights\" value={selectedFlight} onChange={handleSelection} required style={styles.select}>\n// //             <option value=\"\" disabled>Select a flight</option>\n// //             {flights.map((flight) => (\n// //               <option key={flight.flight_number} value={flight.flight_number}>\n// //                 {flight.flight_number} - {flight.source_city} to {flight.destination_city}\n// //               </option>\n// //             ))}\n// //           </select>\n// //           <button\n// //             type=\"submit\"\n// //             style={styles.button}\n// //             onMouseOver={(e) => (e.target.style.backgroundColor = styles.buttonHover.backgroundColor)}\n// //             onMouseOut={(e) => (e.target.style.backgroundColor = styles.button.backgroundColor)}\n// //           >\n// //             Confirm\n// //           </button>\n// //         </form>\n// //         <button\n// //           type=\"button\"\n// //           onClick={handleCreateFlight}\n// //           style={{ ...styles.button, ...styles.createButton }}\n// //           onMouseOver={(e) => (e.target.style.backgroundColor = styles.createButtonHover.backgroundColor)}\n// //           onMouseOut={(e) => (e.target.style.backgroundColor = styles.createButton.backgroundColor)}\n// //         >\n// //           Create New Flight\n// //         </button>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n// // export default SelectFlight;\n// import React, { useState, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { useFlight } from '../context/FlightContext';\n// const SelectFlight = () => {\n//   const [flights, setFlights] = useState([]);\n//   const [selectedFlight, setSelectedFlight] = useState('');\n//   const navigate = useNavigate();\n//   const { setSelectedFlight: setGlobalSelectedFlight } = useFlight();\n//   useEffect(() => {\n//     const fetchFlights = async () => {\n//       try {\n//         const response = await fetch('http://localhost:8000/api/flightinfo/all-flights/');\n//         const data = await response.json();\n//         setFlights(data);\n//       } catch (error) {\n//         console.error('Error fetching flights:', error);\n//       }\n//     };\n//     fetchFlights();\n//   }, []);\n//   const handleSelection = (e) => {\n//     setSelectedFlight(e.target.value);\n//   };\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!selectedFlight) return;\n//     try {\n//       const selectedFlightData = flights.find(flight => flight.flight_number === selectedFlight);\n//       const response = await fetch(`http://localhost:8080/backend/fetch-and-assign-crew/${selectedFlight}`, {\n//         method: 'GET',\n//       });\n//       const data = await response.json();\n//       setGlobalSelectedFlight(selectedFlightData);\n//       navigate(`/home/${selectedFlight}`);\n//     } catch (error) {\n//       console.error('Error assigning crew:', error);\n//     }\n//   };\n//   const handleCreateFlight = () => {\n//     navigate('/create-flight');\n//   };\n//   const styles = {\n//     container: {\n//       display: 'flex',\n//       justifyContent: 'center',\n//       alignItems: 'center',\n//       height: '100vh',\n//       backgroundColor: '#e3f2fd', // Light blue background\n//     },\n//     content: {\n//       maxWidth: '600px',\n//       width: '100%',\n//       padding: '40px',\n//       backgroundColor: 'white',\n//       borderRadius: '10px',\n//       boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n//       textAlign: 'center',\n//     },\n//     header: {\n//       color: '#1976d2', // Blue header\n//       fontSize: '2em',\n//     },\n//     form: {\n//       display: 'flex',\n//       flexDirection: 'column',\n//       alignItems: 'center',\n//     },\n//     label: {\n//       marginBottom: '10px',\n//       color: '#333',\n//       fontWeight: 'bold',\n//       fontSize: '1.2em',\n//     },\n//     select: {\n//       width: '100%',\n//       padding: '15px',\n//       marginBottom: '20px',\n//       border: '1px solid #ddd',\n//       borderRadius: '5px',\n//       backgroundColor: '#f9f9f9',\n//       fontSize: '1em',\n//     },\n//     button: {\n//       backgroundColor: '#1976d2', // Blue button\n//       color: 'white',\n//       border: 'none',\n//       padding: '15px 30px',\n//       borderRadius: '5px',\n//       cursor: 'pointer',\n//       fontSize: '1.2em',\n//       transition: 'background-color 0.3s',\n//       marginBottom: '10px',\n//     },\n//     buttonHover: {\n//       backgroundColor: '#145ca8', // Darker blue on hover\n//     },\n//     createButton: {\n//       backgroundColor: '#1976d2', // Blue button for create\n//       color: 'white',\n//     },\n//     createButtonHover: {\n//       backgroundColor: '#145ca8', // Darker blue on hover\n//     },\n//   };\n//   return (\n//     <div style={styles.container}>\n//       <div style={styles.content}>\n//         <h2 style={styles.header}>Select Flight</h2>\n//         <form onSubmit={handleSubmit} style={styles.form}>\n//           <label htmlFor=\"flights\" style={styles.label}>Choose a flight:</label>\n//           <select id=\"flights\" value={selectedFlight} onChange={handleSelection} required style={styles.select}>\n//             <option value=\"\" disabled>Select a flight</option>\n//             {flights.map((flight) => (\n//               <option key={flight.flight_number} value={flight.flight_number}>\n//                 {flight.flight_number} - {flight.source_city} to {flight.destination_city}\n//               </option>\n//             ))}\n//           </select>\n//           <button\n//             type=\"submit\"\n//             style={styles.button}\n//             onMouseOver={(e) => (e.target.style.backgroundColor = styles.buttonHover.backgroundColor)}\n//             onMouseOut={(e) => (e.target.style.backgroundColor = styles.button.backgroundColor)}\n//           >\n//             Confirm\n//           </button>\n//         </form>\n//         <button\n//           type=\"button\"\n//           onClick={handleCreateFlight}\n//           style={{ ...styles.button, ...styles.createButton }}\n//           onMouseOver={(e) => (e.target.style.backgroundColor = styles.createButtonHover.backgroundColor)}\n//           onMouseOut={(e) => (e.target.style.backgroundColor = styles.createButton.backgroundColor)}\n//         >\n//           Create New Flight\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n// export default SelectFlight;\nimport React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{useFlight}from'../context/FlightContext';import{Button,Box,Typography,Container,CssBaseline,CircularProgress,MenuItem,FormControl,InputLabel,Select}from'@mui/material';import{createTheme,ThemeProvider}from'@mui/material/styles';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const theme=createTheme({palette:{primary:{main:'#1976d2'},secondary:{main:'#6C757D'},info:{main:'#17A2B8'}},typography:{fontFamily:'\"Roboto\", \"Helvetica\", \"Arial\", sans-serif'}});const SelectFlight=()=>{const[flights,setFlights]=useState([]);const[selectedFlight,setSelectedFlight]=useState('');const navigate=useNavigate();const{setSelectedFlight:setGlobalSelectedFlight}=useFlight();useEffect(()=>{const fetchFlights=async()=>{try{const response=await fetch('http://localhost:8000/api/flightinfo/all-flights/');const data=await response.json();setFlights(data);}catch(error){console.error('Error fetching flights:',error);}};fetchFlights();},[]);const handleSelection=e=>{setSelectedFlight(e.target.value);};const handleSubmit=async e=>{e.preventDefault();if(!selectedFlight)return;try{const selectedFlightData=flights.find(flight=>flight.flight_number===selectedFlight);const response=await fetch(\"http://localhost:8080/backend/fetch-and-assign-crew/\".concat(selectedFlight),{method:'GET'});const data=await response.json();setGlobalSelectedFlight(selectedFlightData);navigate(\"/home/\".concat(selectedFlight));}catch(error){console.error('Error assigning crew:',error);}};const handleCreateFlight=()=>{navigate('/create-flight');};return/*#__PURE__*/_jsxs(ThemeProvider,{theme:theme,children:[/*#__PURE__*/_jsx(CssBaseline,{}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',minHeight:'100vh',background:'linear-gradient(180deg, #f0f4ff 0%, #d0e2ff 100%)',padding:6},children:/*#__PURE__*/_jsx(Container,{component:\"main\",maxWidth:\"md\",children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',alignItems:'center',background:'white',padding:6,borderRadius:2,boxShadow:'0 3px 5px 2px rgba(0, 0, 0, 0.1)',textAlign:'center',width:'100%'// minHeight: '50vh', \n},children:[/*#__PURE__*/_jsx(Typography,{component:\"h1\",variant:\"h4\",sx:{fontSize:'2rem',fontWeight:'bold',color:'textSecondary'},children:\"Select Flight\"}),/*#__PURE__*/_jsxs(Box,{component:\"form\",onSubmit:handleSubmit,noValidate:true,sx:{mt:3,width:'100%'},children:[/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,sx:{mt:2,mb:4},children:[/*#__PURE__*/_jsx(InputLabel,{id:\"flight-select-label\",children:\"Choose a flight\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"flight-select-label\",id:\"flights\",value:selectedFlight,onChange:handleSelection,required:true,label:\"Choose a flight\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",disabled:true,children:\"Select a flight\"}),flights.map(flight=>/*#__PURE__*/_jsxs(MenuItem,{value:flight.flight_number,children:[flight.flight_number,\" - \",flight.source_city,\" to \",flight.destination_city]},flight.flight_number))]})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",fullWidth:true,variant:\"contained\",sx:{mt:2,mb:2,padding:'16px 0',borderRadius:'20px',fontSize:'1.2rem',bgcolor:'primary.main',color:'white','&:hover':{bgcolor:'primary.dark'},transition:'all 0.3s ease'},children:\"Confirm\"})]}),/*#__PURE__*/_jsx(Button,{type:\"button\",onClick:handleCreateFlight,fullWidth:true,variant:\"contained\",sx:{mt:2,padding:'16px 0',borderRadius:'20px',fontSize:'1.2rem',bgcolor:'secondary.main',color:'white','&:hover':{bgcolor:'secondary.dark'},transition:'all 0.3s ease'},children:\"Create New Flight\"})]})})})]});};export default SelectFlight;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useFlight","Button","Box","Typography","Container","CssBaseline","CircularProgress","MenuItem","FormControl","InputLabel","Select","createTheme","ThemeProvider","jsx","_jsx","jsxs","_jsxs","theme","palette","primary","main","secondary","info","typography","fontFamily","SelectFlight","flights","setFlights","selectedFlight","setSelectedFlight","navigate","setGlobalSelectedFlight","fetchFlights","response","fetch","data","json","error","console","handleSelection","e","target","value","handleSubmit","preventDefault","selectedFlightData","find","flight","flight_number","concat","method","handleCreateFlight","children","sx","display","flexDirection","alignItems","justifyContent","minHeight","background","padding","component","maxWidth","borderRadius","boxShadow","textAlign","width","variant","fontSize","fontWeight","color","onSubmit","noValidate","mt","fullWidth","mb","id","labelId","onChange","required","label","disabled","map","source_city","destination_city","type","bgcolor","transition","onClick"],"sources":["D:/Projects/FlightRoster/Main System/frontend/src/components/SelectFlight.js"],"sourcesContent":["// // import React, { useState, useEffect } from 'react';\r\n// // import { useNavigate } from 'react-router-dom';\r\n// // import { useFlight } from '../context/FlightContext';\r\n\r\n// // const SelectFlight = () => {\r\n// //   const [flights, setFlights] = useState([]);\r\n// //   const [selectedFlight, setSelectedFlight] = useState('');\r\n// //   const navigate = useNavigate();\r\n// //   const { setSelectedFlight: setGlobalSelectedFlight } = useFlight();\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchFlights = async () => {\r\n// //       try {\r\n// //         const response = await fetch('http://localhost:8000/api/flightinfo/all-flights/');\r\n// //         const data = await response.json();\r\n// //         setFlights(data);\r\n// //       } catch (error) {\r\n// //         console.error('Error fetching flights:', error);\r\n// //       }\r\n// //     };\r\n\r\n// //     fetchFlights();\r\n// //   }, []);\r\n\r\n// //   const handleSelection = (e) => {\r\n// //     setSelectedFlight(e.target.value);\r\n// //   };\r\n\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n// //     if (!selectedFlight) return;\r\n\r\n// //     try {\r\n// //       const selectedFlightData = flights.find(flight => flight.flight_number === selectedFlight);\r\n// //       const response = await fetch(`http://localhost:8080/backend/fetch-and-assign-crew/${selectedFlight}`, {\r\n// //         method: 'GET',\r\n// //       });\r\n// //       const data = await response.json();\r\n// //       setGlobalSelectedFlight(selectedFlightData);\r\n// //       navigate(`/home/${selectedFlight}`);\r\n// //     } catch (error) {\r\n// //       console.error('Error assigning crew:', error);\r\n// //     }\r\n// //   };\r\n\r\n// //   const handleCreateFlight = () => {\r\n// //     navigate('/create-flight');\r\n// //   };\r\n\r\n// //   const styles = {\r\n// //     container: {\r\n// //       display: 'flex',\r\n// //       justifyContent: 'center',\r\n// //       alignItems: 'center',\r\n// //       height: '100vh',\r\n// //       backgroundColor: '#f5f5f5',\r\n// //     },\r\n// //     content: {\r\n// //       maxWidth: '600px',\r\n// //       width: '100%',\r\n// //       padding: '40px',\r\n// //       backgroundColor: 'white',\r\n// //       borderRadius: '10px',\r\n// //       boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n// //       textAlign: 'center',\r\n// //     },\r\n// //     header: {\r\n// //       color: '#1976d2',\r\n// //       fontSize: '2em',\r\n// //     },\r\n// //     form: {\r\n// //       display: 'flex',\r\n// //       flexDirection: 'column',\r\n// //       alignItems: 'center',\r\n// //     },\r\n// //     label: {\r\n// //       marginBottom: '10px',\r\n// //       color: '#333',\r\n// //       fontWeight: 'bold',\r\n// //       fontSize: '1.2em',\r\n// //     },\r\n// //     select: {\r\n// //       width: '100%',\r\n// //       padding: '15px',\r\n// //       marginBottom: '20px',\r\n// //       border: '1px solid #ddd',\r\n// //       borderRadius: '5px',\r\n// //       backgroundColor: '#f9f9f9',\r\n// //       fontSize: '1em',\r\n// //     },\r\n// //     button: {\r\n// //       backgroundColor: '#1976d2',\r\n// //       color: 'white',\r\n// //       border: 'none',\r\n// //       padding: '15px 30px',\r\n// //       borderRadius: '5px',\r\n// //       cursor: 'pointer',\r\n// //       fontSize: '1.2em',\r\n// //       transition: 'background-color 0.3s',\r\n// //       marginBottom: '10px',\r\n// //     },\r\n// //     buttonHover: {\r\n// //       backgroundColor: '#145ca8',\r\n// //     },\r\n// //     createButton: {\r\n// //       backgroundColor: '#4caf50',\r\n// //     },\r\n// //     createButtonHover: {\r\n// //       backgroundColor: '#388e3c',\r\n// //     },\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div style={styles.container}>\r\n// //       <div style={styles.content}>\r\n// //         <h2 style={styles.header}>Select Flight</h2>\r\n// //         <form onSubmit={handleSubmit} style={styles.form}>\r\n// //           <label htmlFor=\"flights\" style={styles.label}>Choose a flight:</label>\r\n// //           <select id=\"flights\" value={selectedFlight} onChange={handleSelection} required style={styles.select}>\r\n// //             <option value=\"\" disabled>Select a flight</option>\r\n// //             {flights.map((flight) => (\r\n// //               <option key={flight.flight_number} value={flight.flight_number}>\r\n// //                 {flight.flight_number} - {flight.source_city} to {flight.destination_city}\r\n// //               </option>\r\n// //             ))}\r\n// //           </select>\r\n// //           <button\r\n// //             type=\"submit\"\r\n// //             style={styles.button}\r\n// //             onMouseOver={(e) => (e.target.style.backgroundColor = styles.buttonHover.backgroundColor)}\r\n// //             onMouseOut={(e) => (e.target.style.backgroundColor = styles.button.backgroundColor)}\r\n// //           >\r\n// //             Confirm\r\n// //           </button>\r\n// //         </form>\r\n// //         <button\r\n// //           type=\"button\"\r\n// //           onClick={handleCreateFlight}\r\n// //           style={{ ...styles.button, ...styles.createButton }}\r\n// //           onMouseOver={(e) => (e.target.style.backgroundColor = styles.createButtonHover.backgroundColor)}\r\n// //           onMouseOut={(e) => (e.target.style.backgroundColor = styles.createButton.backgroundColor)}\r\n// //         >\r\n// //           Create New Flight\r\n// //         </button>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default SelectFlight;\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { useFlight } from '../context/FlightContext';\r\n\r\n// const SelectFlight = () => {\r\n//   const [flights, setFlights] = useState([]);\r\n//   const [selectedFlight, setSelectedFlight] = useState('');\r\n//   const navigate = useNavigate();\r\n//   const { setSelectedFlight: setGlobalSelectedFlight } = useFlight();\r\n\r\n//   useEffect(() => {\r\n//     const fetchFlights = async () => {\r\n//       try {\r\n//         const response = await fetch('http://localhost:8000/api/flightinfo/all-flights/');\r\n//         const data = await response.json();\r\n//         setFlights(data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching flights:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchFlights();\r\n//   }, []);\r\n\r\n//   const handleSelection = (e) => {\r\n//     setSelectedFlight(e.target.value);\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!selectedFlight) return;\r\n\r\n//     try {\r\n//       const selectedFlightData = flights.find(flight => flight.flight_number === selectedFlight);\r\n//       const response = await fetch(`http://localhost:8080/backend/fetch-and-assign-crew/${selectedFlight}`, {\r\n//         method: 'GET',\r\n//       });\r\n//       const data = await response.json();\r\n//       setGlobalSelectedFlight(selectedFlightData);\r\n//       navigate(`/home/${selectedFlight}`);\r\n//     } catch (error) {\r\n//       console.error('Error assigning crew:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleCreateFlight = () => {\r\n//     navigate('/create-flight');\r\n//   };\r\n\r\n//   const styles = {\r\n//     container: {\r\n//       display: 'flex',\r\n//       justifyContent: 'center',\r\n//       alignItems: 'center',\r\n//       height: '100vh',\r\n//       backgroundColor: '#e3f2fd', // Light blue background\r\n//     },\r\n//     content: {\r\n//       maxWidth: '600px',\r\n//       width: '100%',\r\n//       padding: '40px',\r\n//       backgroundColor: 'white',\r\n//       borderRadius: '10px',\r\n//       boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n//       textAlign: 'center',\r\n//     },\r\n//     header: {\r\n//       color: '#1976d2', // Blue header\r\n//       fontSize: '2em',\r\n//     },\r\n//     form: {\r\n//       display: 'flex',\r\n//       flexDirection: 'column',\r\n//       alignItems: 'center',\r\n//     },\r\n//     label: {\r\n//       marginBottom: '10px',\r\n//       color: '#333',\r\n//       fontWeight: 'bold',\r\n//       fontSize: '1.2em',\r\n//     },\r\n//     select: {\r\n//       width: '100%',\r\n//       padding: '15px',\r\n//       marginBottom: '20px',\r\n//       border: '1px solid #ddd',\r\n//       borderRadius: '5px',\r\n//       backgroundColor: '#f9f9f9',\r\n//       fontSize: '1em',\r\n//     },\r\n//     button: {\r\n//       backgroundColor: '#1976d2', // Blue button\r\n//       color: 'white',\r\n//       border: 'none',\r\n//       padding: '15px 30px',\r\n//       borderRadius: '5px',\r\n//       cursor: 'pointer',\r\n//       fontSize: '1.2em',\r\n//       transition: 'background-color 0.3s',\r\n//       marginBottom: '10px',\r\n//     },\r\n//     buttonHover: {\r\n//       backgroundColor: '#145ca8', // Darker blue on hover\r\n//     },\r\n//     createButton: {\r\n//       backgroundColor: '#1976d2', // Blue button for create\r\n//       color: 'white',\r\n//     },\r\n//     createButtonHover: {\r\n//       backgroundColor: '#145ca8', // Darker blue on hover\r\n//     },\r\n//   };\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       <div style={styles.content}>\r\n//         <h2 style={styles.header}>Select Flight</h2>\r\n//         <form onSubmit={handleSubmit} style={styles.form}>\r\n//           <label htmlFor=\"flights\" style={styles.label}>Choose a flight:</label>\r\n//           <select id=\"flights\" value={selectedFlight} onChange={handleSelection} required style={styles.select}>\r\n//             <option value=\"\" disabled>Select a flight</option>\r\n//             {flights.map((flight) => (\r\n//               <option key={flight.flight_number} value={flight.flight_number}>\r\n//                 {flight.flight_number} - {flight.source_city} to {flight.destination_city}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//           <button\r\n//             type=\"submit\"\r\n//             style={styles.button}\r\n//             onMouseOver={(e) => (e.target.style.backgroundColor = styles.buttonHover.backgroundColor)}\r\n//             onMouseOut={(e) => (e.target.style.backgroundColor = styles.button.backgroundColor)}\r\n//           >\r\n//             Confirm\r\n//           </button>\r\n//         </form>\r\n//         <button\r\n//           type=\"button\"\r\n//           onClick={handleCreateFlight}\r\n//           style={{ ...styles.button, ...styles.createButton }}\r\n//           onMouseOver={(e) => (e.target.style.backgroundColor = styles.createButtonHover.backgroundColor)}\r\n//           onMouseOut={(e) => (e.target.style.backgroundColor = styles.createButton.backgroundColor)}\r\n//         >\r\n//           Create New Flight\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SelectFlight;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useFlight } from '../context/FlightContext';\r\nimport { Button, Box, Typography, Container, CssBaseline, CircularProgress, MenuItem, FormControl, InputLabel, Select } from '@mui/material';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#1976d2',\r\n    },\r\n    secondary: {\r\n      main: '#6C757D',\r\n    },\r\n    info: {\r\n      main: '#17A2B8',\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n  },\r\n});\r\n\r\nconst SelectFlight = () => {\r\n  const [flights, setFlights] = useState([]);\r\n  const [selectedFlight, setSelectedFlight] = useState('');\r\n  const navigate = useNavigate();\r\n  const { setSelectedFlight: setGlobalSelectedFlight } = useFlight();\r\n\r\n  useEffect(() => {\r\n    const fetchFlights = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8000/api/flightinfo/all-flights/');\r\n        const data = await response.json();\r\n        setFlights(data);\r\n      } catch (error) {\r\n        console.error('Error fetching flights:', error);\r\n      }\r\n    };\r\n\r\n    fetchFlights();\r\n  }, []);\r\n\r\n  const handleSelection = (e) => {\r\n    setSelectedFlight(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!selectedFlight) return;\r\n\r\n    try {\r\n      const selectedFlightData = flights.find(flight => flight.flight_number === selectedFlight);\r\n      const response = await fetch(`http://localhost:8080/backend/fetch-and-assign-crew/${selectedFlight}`, {\r\n        method: 'GET',\r\n      });\r\n      const data = await response.json();\r\n      setGlobalSelectedFlight(selectedFlightData);\r\n      navigate(`/home/${selectedFlight}`);\r\n    } catch (error) {\r\n      console.error('Error assigning crew:', error);\r\n    }\r\n  };\r\n\r\n  const handleCreateFlight = () => {\r\n    navigate('/create-flight');\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          minHeight: '100vh',\r\n          background: 'linear-gradient(180deg, #f0f4ff 0%, #d0e2ff 100%)',\r\n          padding: 6,\r\n        }}\r\n      >\r\n        <Container component=\"main\" maxWidth=\"md\">\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              background: 'white',\r\n              padding: 6,\r\n              borderRadius: 2,\r\n              boxShadow: '0 3px 5px 2px rgba(0, 0, 0, 0.1)',\r\n              textAlign: 'center',\r\n              width: '100%',\r\n              // minHeight: '50vh', \r\n            }}\r\n          >\r\n            <Typography component=\"h1\" variant=\"h4\" sx={{ fontSize: '2rem', fontWeight: 'bold', color: 'textSecondary' }}>\r\n              Select Flight\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 3, width: '100%' }}>\r\n              <FormControl fullWidth sx={{ mt: 2, mb: 4 }}>\r\n                <InputLabel id=\"flight-select-label\">Choose a flight</InputLabel>\r\n                <Select\r\n                  labelId=\"flight-select-label\"\r\n                  id=\"flights\"\r\n                  value={selectedFlight}\r\n                  onChange={handleSelection}\r\n                  required\r\n                  label=\"Choose a flight\"\r\n                >\r\n                  <MenuItem value=\"\" disabled>\r\n                    Select a flight\r\n                  </MenuItem>\r\n                  {flights.map((flight) => (\r\n                    <MenuItem key={flight.flight_number} value={flight.flight_number}>\r\n                      {flight.flight_number} - {flight.source_city} to {flight.destination_city}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{\r\n                  mt: 2,\r\n                  mb: 2,\r\n                  padding: '16px 0',\r\n                  borderRadius: '20px',\r\n                  fontSize: '1.2rem',\r\n                  bgcolor: 'primary.main',\r\n                  color: 'white',\r\n                  '&:hover': { bgcolor: 'primary.dark' },\r\n                  transition: 'all 0.3s ease',\r\n                }}\r\n              >\r\n                Confirm\r\n              </Button>\r\n            </Box>\r\n            <Button\r\n              type=\"button\"\r\n              onClick={handleCreateFlight}\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{\r\n                mt: 2,\r\n                padding: '16px 0',\r\n                borderRadius: '20px',\r\n                fontSize: '1.2rem',\r\n                bgcolor: 'secondary.main',\r\n                color: 'white',\r\n                '&:hover': { bgcolor: 'secondary.dark' },\r\n                transition: 'all 0.3s ease',\r\n              }}\r\n            >\r\n              Create New Flight\r\n            </Button>\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default SelectFlight;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}