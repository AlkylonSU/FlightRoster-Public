{"ast":null,"code":"var _jsxFileName = \"/Users/hamza/Desktop/308/FlightRoster/Main System/frontend/src/components/views/RosterManagement.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Button, Box, Typography, Container, CssBaseline, Snackbar, Alert } from '@mui/material';\n// import { useParams, useNavigate } from 'react-router-dom'; // Ensure useNavigate is imported\n// import CreateIcon from '@mui/icons-material/Create';\n// import SaveAltIcon from '@mui/icons-material/SaveAlt';\n// import ViewListIcon from '@mui/icons-material/ViewList';\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\n\n// const theme = createTheme({\n//   palette: {\n//     primary: {\n//       main: '#1976d2',\n//     },\n//     secondary: {\n//       main: '#6C757D',\n//     },\n//     info: {\n//       main: '#17A2B8',\n//     },\n//   },\n//   typography: {\n//     fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n//   },\n// });\n\n// const RosterManagement = () => {\n//   const { flightNumber } = useParams(); // Get flight number from URL parameters\n//   const navigate = useNavigate(); // Define navigate function\n//   const [snackbarOpen, setSnackbarOpen] = useState(false);\n//   const [snackbarMessage, setSnackbarMessage] = useState('');\n//   const [snackbarSeverity, setSnackbarSeverity] = useState('success');\n\n//   const handleSnackbarClose = () => {\n//     setSnackbarOpen(false);\n//   };\n\n//   const handlePostRequest = (url) => {\n//     fetch(url, {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ flight_number: flightNumber }),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         if (data.message) {\n//           setSnackbarSeverity('success');\n//           setSnackbarMessage(data.message);\n//         } else {\n//           setSnackbarSeverity('error');\n//           setSnackbarMessage(data.error || 'An error occurred');\n//         }\n//         setSnackbarOpen(true);\n//       })\n//       .catch((error) => {\n//         setSnackbarSeverity('error');\n//         setSnackbarMessage('An error occurred');\n//         setSnackbarOpen(true);\n//       });\n//   };\n\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <CssBaseline />\n//       <Container component=\"main\" maxWidth=\"md\" sx={{ height: '100vh', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n//         <Box\n//           sx={{\n//             display: 'flex',\n//             flexDirection: 'column',\n//             alignItems: 'center',\n//             background: 'linear-gradient(180deg, #f0f4ff 0%, #d0e2ff 100%)',\n//             padding: 6,\n//             borderRadius: 2,\n//             boxShadow: '0 3px 5px 2px rgba(0, 0, 0, 0.1)',\n//             textAlign: 'center',\n//             width: '100%',\n//           }}\n//         >\n//           <Typography component=\"h1\" variant=\"h4\" color=\"textSecondary\" gutterBottom>\n//             Roster Management\n//           </Typography>\n//           <Box sx={{ mt: 4, width: '100%' }}>\n//             <Button\n//               startIcon={<CreateIcon />}\n//               variant=\"contained\"\n//               sx={{\n//                 width: '100%',\n//                 mb: 2,\n//                 bgcolor: 'primary.main',\n//                 color: 'white',\n//                 '&:hover': { bgcolor: 'primary.dark' },\n//                 transition: 'all 0.3s ease',\n//                 padding: 2,\n//                 fontSize: '1.1rem',\n//               }}\n//               onClick={() => handlePostRequest(`http://localhost:8080/backend/export/mysql/${flightNumber}/`)}\n//             >\n//               Create Roster (SQL)\n//             </Button>\n//             <Button\n//               startIcon={<CreateIcon />}\n//               variant=\"contained\"\n//               sx={{\n//                 width: '100%',\n//                 mb: 2,\n//                 bgcolor: 'primary.main',\n//                 color: 'white',\n//                 '&:hover': { bgcolor: 'primary.dark' },\n//                 transition: 'all 0.3s ease',\n//                 padding: 2,\n//                 fontSize: '1.1rem',\n//               }}\n//               onClick={() => handlePostRequest(`http://localhost:8080/backend/export/mongodb/${flightNumber}/`)}\n//             >\n//               Create Roster (NoSQL)\n//             </Button>\n//             <Button\n//               startIcon={<SaveAltIcon />}\n//               variant=\"contained\"\n//               sx={{\n//                 width: '100%',\n//                 mb: 2,\n//                 bgcolor: 'primary.main',\n//                 color: 'white',\n//                 '&:hover': { bgcolor: 'primary.dark' },\n//                 transition: 'all 0.3s ease',\n//                 padding: 2,\n//                 fontSize: '1.1rem',\n//               }}\n//               onClick={() => handlePostRequest(`http://localhost:8080/backend/export/json/${flightNumber}/`)}\n//             >\n//               Export Roster (JSON)\n//             </Button>\n//             <Button\n//               startIcon={<ViewListIcon />}\n//               variant=\"contained\"\n//               sx={{\n//                 width: '100%',\n//                 mb: 2,\n//                 bgcolor: 'primary.main',\n//                 color: 'white',\n//                 '&:hover': { bgcolor: 'primary.dark' },\n//                 transition: 'all 0.3s ease',\n//                 padding: 2,\n//                 fontSize: '1.1rem',\n//               }}\n//               onClick={() => navigate(`/view-roster`)}\n//             >\n//               View Roster\n//             </Button>\n//           </Box>\n//         </Box>\n//       </Container>\n//       <Snackbar open={snackbarOpen} autoHideDuration={6000} onClose={handleSnackbarClose}>\n//         <Alert onClose={handleSnackbarClose} severity={snackbarSeverity} sx={{ width: '100%' }}>\n//           {snackbarMessage}\n//         </Alert>\n//       </Snackbar>\n//     </ThemeProvider>\n//   );\n// };\n\n// export default RosterManagement;\n\nimport React, { useState } from 'react';\nimport { AppBar, Toolbar, Typography, Button, Box, Container, CssBaseline, Snackbar, Alert } from '@mui/material';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport CreateIcon from '@mui/icons-material/Create';\nimport SaveAltIcon from '@mui/icons-material/SaveAlt';\nimport ViewListIcon from '@mui/icons-material/ViewList';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#1976d2'\n    },\n    secondary: {\n      main: '#6C757D'\n    },\n    info: {\n      main: '#17A2B8'\n    }\n  },\n  typography: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif'\n  }\n});\nconst RosterManagement = () => {\n  _s();\n  const {\n    flightNumber\n  } = useParams();\n  const navigate = useNavigate();\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [snackbarSeverity, setSnackbarSeverity] = useState('success');\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n  const handlePostRequest = url => {\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        flight_number: flightNumber\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.message) {\n        setSnackbarSeverity('success');\n        setSnackbarMessage(data.message);\n      } else {\n        setSnackbarSeverity('error');\n        setSnackbarMessage(data.error || 'An error occurred');\n      }\n      setSnackbarOpen(true);\n    }).catch(error => {\n      setSnackbarSeverity('error');\n      setSnackbarMessage('An error occurred');\n      setSnackbarOpen(true);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            flexGrow: 1\n          },\n          children: \"Flight Management Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          onClick: () => navigate('/home/ABC123'),\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          onClick: () => navigate('/about'),\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          onClick: () => navigate('/contact'),\n          children: \"Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"md\",\n      sx: {\n        height: '100vh',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          background: 'linear-gradient(180deg, #f0f4ff 0%, #d0e2ff 100%)',\n          padding: 6,\n          borderRadius: 2,\n          boxShadow: '0 3px 5px 2px rgba(0, 0, 0, 0.1)',\n          textAlign: 'center',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h4\",\n          color: \"textSecondary\",\n          gutterBottom: true,\n          children: \"Roster Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 4,\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            startIcon: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 26\n            }, this),\n            variant: \"contained\",\n            sx: {\n              width: '100%',\n              mb: 2,\n              bgcolor: 'primary.main',\n              color: 'white',\n              '&:hover': {\n                bgcolor: 'primary.dark'\n              },\n              transition: 'all 0.3s ease',\n              padding: 2,\n              fontSize: '1.1rem'\n            },\n            onClick: () => handlePostRequest(`http://localhost:8080/backend/export/mysql/${flightNumber}/`),\n            children: \"Create Roster (SQL)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            startIcon: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 26\n            }, this),\n            variant: \"contained\",\n            sx: {\n              width: '100%',\n              mb: 2,\n              bgcolor: 'primary.main',\n              color: 'white',\n              '&:hover': {\n                bgcolor: 'primary.dark'\n              },\n              transition: 'all 0.3s ease',\n              padding: 2,\n              fontSize: '1.1rem'\n            },\n            onClick: () => handlePostRequest(`http://localhost:8080/backend/export/mongodb/${flightNumber}/`),\n            children: \"Create Roster (NoSQL)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            startIcon: /*#__PURE__*/_jsxDEV(SaveAltIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 26\n            }, this),\n            variant: \"contained\",\n            sx: {\n              width: '100%',\n              mb: 2,\n              bgcolor: 'primary.main',\n              color: 'white',\n              '&:hover': {\n                bgcolor: 'primary.dark'\n              },\n              transition: 'all 0.3s ease',\n              padding: 2,\n              fontSize: '1.1rem'\n            },\n            onClick: () => handlePostRequest(`http://localhost:8080/backend/export/json/${flightNumber}/`),\n            children: \"Export Roster (JSON)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            startIcon: /*#__PURE__*/_jsxDEV(ViewListIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 26\n            }, this),\n            variant: \"contained\",\n            sx: {\n              width: '100%',\n              mb: 2,\n              bgcolor: 'primary.main',\n              color: 'white',\n              '&:hover': {\n                bgcolor: 'primary.dark'\n              },\n              transition: 'all 0.3s ease',\n              padding: 2,\n              fontSize: '1.1rem'\n            },\n            onClick: () => navigate(`/view-roster`),\n            children: \"View Roster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbarOpen,\n      autoHideDuration: 6000,\n      onClose: handleSnackbarClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleSnackbarClose,\n        severity: snackbarSeverity,\n        sx: {\n          width: '100%'\n        },\n        children: snackbarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n};\n_s(RosterManagement, \"X5gcNQ6MRS8f3N/cBu43/8XPzOo=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = RosterManagement;\nexport default RosterManagement;\nvar _c;\n$RefreshReg$(_c, \"RosterManagement\");","map":{"version":3,"names":["React","useState","AppBar","Toolbar","Typography","Button","Box","Container","CssBaseline","Snackbar","Alert","useParams","useNavigate","CreateIcon","SaveAltIcon","ViewListIcon","createTheme","ThemeProvider","jsxDEV","_jsxDEV","theme","palette","primary","main","secondary","info","typography","fontFamily","RosterManagement","_s","flightNumber","navigate","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","handleSnackbarClose","handlePostRequest","url","fetch","method","headers","body","JSON","stringify","flight_number","then","response","json","data","message","error","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","position","variant","sx","flexGrow","color","onClick","component","maxWidth","height","display","alignItems","justifyContent","flexDirection","background","padding","borderRadius","boxShadow","textAlign","width","gutterBottom","mt","startIcon","mb","bgcolor","transition","fontSize","open","autoHideDuration","onClose","severity","_c","$RefreshReg$"],"sources":["/Users/hamza/Desktop/308/FlightRoster/Main System/frontend/src/components/views/RosterManagement.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { Button, Box, Typography, Container, CssBaseline, Snackbar, Alert } from '@mui/material';\n// import { useParams, useNavigate } from 'react-router-dom'; // Ensure useNavigate is imported\n// import CreateIcon from '@mui/icons-material/Create';\n// import SaveAltIcon from '@mui/icons-material/SaveAlt';\n// import ViewListIcon from '@mui/icons-material/ViewList';\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\n\n// const theme = createTheme({\n//   palette: {\n//     primary: {\n//       main: '#1976d2',\n//     },\n//     secondary: {\n//       main: '#6C757D',\n//     },\n//     info: {\n//       main: '#17A2B8',\n//     },\n//   },\n//   typography: {\n//     fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n//   },\n// });\n\n// const RosterManagement = () => {\n//   const { flightNumber } = useParams(); // Get flight number from URL parameters\n//   const navigate = useNavigate(); // Define navigate function\n//   const [snackbarOpen, setSnackbarOpen] = useState(false);\n//   const [snackbarMessage, setSnackbarMessage] = useState('');\n//   const [snackbarSeverity, setSnackbarSeverity] = useState('success');\n\n//   const handleSnackbarClose = () => {\n//     setSnackbarOpen(false);\n//   };\n\n//   const handlePostRequest = (url) => {\n//     fetch(url, {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ flight_number: flightNumber }),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         if (data.message) {\n//           setSnackbarSeverity('success');\n//           setSnackbarMessage(data.message);\n//         } else {\n//           setSnackbarSeverity('error');\n//           setSnackbarMessage(data.error || 'An error occurred');\n//         }\n//         setSnackbarOpen(true);\n//       })\n//       .catch((error) => {\n//         setSnackbarSeverity('error');\n//         setSnackbarMessage('An error occurred');\n//         setSnackbarOpen(true);\n//       });\n//   };\n\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <CssBaseline />\n//       <Container component=\"main\" maxWidth=\"md\" sx={{ height: '100vh', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n//         <Box\n//           sx={{\n//             display: 'flex',\n//             flexDirection: 'column',\n//             alignItems: 'center',\n//             background: 'linear-gradient(180deg, #f0f4ff 0%, #d0e2ff 100%)',\n//             padding: 6,\n//             borderRadius: 2,\n//             boxShadow: '0 3px 5px 2px rgba(0, 0, 0, 0.1)',\n//             textAlign: 'center',\n//             width: '100%',\n//           }}\n//         >\n//           <Typography component=\"h1\" variant=\"h4\" color=\"textSecondary\" gutterBottom>\n//             Roster Management\n//           </Typography>\n//           <Box sx={{ mt: 4, width: '100%' }}>\n//             <Button\n//               startIcon={<CreateIcon />}\n//               variant=\"contained\"\n//               sx={{\n//                 width: '100%',\n//                 mb: 2,\n//                 bgcolor: 'primary.main',\n//                 color: 'white',\n//                 '&:hover': { bgcolor: 'primary.dark' },\n//                 transition: 'all 0.3s ease',\n//                 padding: 2,\n//                 fontSize: '1.1rem',\n//               }}\n//               onClick={() => handlePostRequest(`http://localhost:8080/backend/export/mysql/${flightNumber}/`)}\n//             >\n//               Create Roster (SQL)\n//             </Button>\n//             <Button\n//               startIcon={<CreateIcon />}\n//               variant=\"contained\"\n//               sx={{\n//                 width: '100%',\n//                 mb: 2,\n//                 bgcolor: 'primary.main',\n//                 color: 'white',\n//                 '&:hover': { bgcolor: 'primary.dark' },\n//                 transition: 'all 0.3s ease',\n//                 padding: 2,\n//                 fontSize: '1.1rem',\n//               }}\n//               onClick={() => handlePostRequest(`http://localhost:8080/backend/export/mongodb/${flightNumber}/`)}\n//             >\n//               Create Roster (NoSQL)\n//             </Button>\n//             <Button\n//               startIcon={<SaveAltIcon />}\n//               variant=\"contained\"\n//               sx={{\n//                 width: '100%',\n//                 mb: 2,\n//                 bgcolor: 'primary.main',\n//                 color: 'white',\n//                 '&:hover': { bgcolor: 'primary.dark' },\n//                 transition: 'all 0.3s ease',\n//                 padding: 2,\n//                 fontSize: '1.1rem',\n//               }}\n//               onClick={() => handlePostRequest(`http://localhost:8080/backend/export/json/${flightNumber}/`)}\n//             >\n//               Export Roster (JSON)\n//             </Button>\n//             <Button\n//               startIcon={<ViewListIcon />}\n//               variant=\"contained\"\n//               sx={{\n//                 width: '100%',\n//                 mb: 2,\n//                 bgcolor: 'primary.main',\n//                 color: 'white',\n//                 '&:hover': { bgcolor: 'primary.dark' },\n//                 transition: 'all 0.3s ease',\n//                 padding: 2,\n//                 fontSize: '1.1rem',\n//               }}\n//               onClick={() => navigate(`/view-roster`)}\n//             >\n//               View Roster\n//             </Button>\n//           </Box>\n//         </Box>\n//       </Container>\n//       <Snackbar open={snackbarOpen} autoHideDuration={6000} onClose={handleSnackbarClose}>\n//         <Alert onClose={handleSnackbarClose} severity={snackbarSeverity} sx={{ width: '100%' }}>\n//           {snackbarMessage}\n//         </Alert>\n//       </Snackbar>\n//     </ThemeProvider>\n//   );\n// };\n\n// export default RosterManagement;\n\n\nimport React, { useState } from 'react';\nimport { AppBar, Toolbar, Typography, Button, Box, Container, CssBaseline, Snackbar, Alert } from '@mui/material';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport CreateIcon from '@mui/icons-material/Create';\nimport SaveAltIcon from '@mui/icons-material/SaveAlt';\nimport ViewListIcon from '@mui/icons-material/ViewList';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#1976d2',\n    },\n    secondary: {\n      main: '#6C757D',\n    },\n    info: {\n      main: '#17A2B8',\n    },\n  },\n  typography: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  },\n});\n\nconst RosterManagement = () => {\n  const { flightNumber } = useParams();\n  const navigate = useNavigate();\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [snackbarSeverity, setSnackbarSeverity] = useState('success');\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n\n  const handlePostRequest = (url) => {\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ flight_number: flightNumber }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.message) {\n          setSnackbarSeverity('success');\n          setSnackbarMessage(data.message);\n        } else {\n          setSnackbarSeverity('error');\n          setSnackbarMessage(data.error || 'An error occurred');\n        }\n        setSnackbarOpen(true);\n      })\n      .catch((error) => {\n        setSnackbarSeverity('error');\n        setSnackbarMessage('An error occurred');\n        setSnackbarOpen(true);\n      });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\n            Flight Management Dashboard\n          </Typography>\n          <Button color=\"inherit\" onClick={() => navigate('/home/ABC123')}>Home</Button>\n          <Button color=\"inherit\" onClick={() => navigate('/about')}>About</Button>\n          <Button color=\"inherit\" onClick={() => navigate('/contact')}>Contact</Button>\n        </Toolbar>\n      </AppBar>\n      <Container component=\"main\" maxWidth=\"md\" sx={{ height: '100vh', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            background: 'linear-gradient(180deg, #f0f4ff 0%, #d0e2ff 100%)',\n            padding: 6,\n            borderRadius: 2,\n            boxShadow: '0 3px 5px 2px rgba(0, 0, 0, 0.1)',\n            textAlign: 'center',\n            width: '100%',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h4\" color=\"textSecondary\" gutterBottom>\n            Roster Management\n          </Typography>\n          <Box sx={{ mt: 4, width: '100%' }}>\n            <Button\n              startIcon={<CreateIcon />}\n              variant=\"contained\"\n              sx={{\n                width: '100%',\n                mb: 2,\n                bgcolor: 'primary.main',\n                color: 'white',\n                '&:hover': { bgcolor: 'primary.dark' },\n                transition: 'all 0.3s ease',\n                padding: 2,\n                fontSize: '1.1rem',\n              }}\n              onClick={() => handlePostRequest(`http://localhost:8080/backend/export/mysql/${flightNumber}/`)}\n            >\n              Create Roster (SQL)\n            </Button>\n            <Button\n              startIcon={<CreateIcon />}\n              variant=\"contained\"\n              sx={{\n                width: '100%',\n                mb: 2,\n                bgcolor: 'primary.main',\n                color: 'white',\n                '&:hover': { bgcolor: 'primary.dark' },\n                transition: 'all 0.3s ease',\n                padding: 2,\n                fontSize: '1.1rem',\n              }}\n              onClick={() => handlePostRequest(`http://localhost:8080/backend/export/mongodb/${flightNumber}/`)}\n            >\n              Create Roster (NoSQL)\n            </Button>\n            <Button\n              startIcon={<SaveAltIcon />}\n              variant=\"contained\"\n              sx={{\n                width: '100%',\n                mb: 2,\n                bgcolor: 'primary.main',\n                color: 'white',\n                '&:hover': { bgcolor: 'primary.dark' },\n                transition: 'all 0.3s ease',\n                padding: 2,\n                fontSize: '1.1rem',\n              }}\n              onClick={() => handlePostRequest(`http://localhost:8080/backend/export/json/${flightNumber}/`)}\n            >\n              Export Roster (JSON)\n            </Button>\n            <Button\n              startIcon={<ViewListIcon />}\n              variant=\"contained\"\n              sx={{\n                width: '100%',\n                mb: 2,\n                bgcolor: 'primary.main',\n                color: 'white',\n                '&:hover': { bgcolor: 'primary.dark' },\n                transition: 'all 0.3s ease',\n                padding: 2,\n                fontSize: '1.1rem',\n              }}\n              onClick={() => navigate(`/view-roster`)}\n            >\n              View Roster\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n      <Snackbar open={snackbarOpen} autoHideDuration={6000} onClose={handleSnackbarClose}>\n        <Alert onClose={handleSnackbarClose} severity={snackbarSeverity} sx={{ width: '100%' }}>\n          {snackbarMessage}\n        </Alert>\n      </Snackbar>\n    </ThemeProvider>\n  );\n};\n\nexport default RosterManagement;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}