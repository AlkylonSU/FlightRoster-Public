{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import ClipLoader from 'react-spinners/ClipLoader';\n// import { Box, Container, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, CssBaseline } from '@mui/material';\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\n// import './PassengerTable.css'; // Import CSS file for styling\n\n// const theme = createTheme({\n//   palette: {\n//     primary: {\n//       main: '#1976d2',\n//     },\n//     secondary: {\n//       main: '#6C757D',\n//     },\n//     info: {\n//       main: '#17A2B8',\n//     },\n//   },\n//   typography: {\n//     fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n//   },\n// });\n\n// const CombinedTable = ({ data }) => {\n//   const [selectedPerson, setSelectedPerson] = useState(null);\n\n//   const handleRowClick = (person) => {\n//     setSelectedPerson(person);\n//   };\n\n//   return (\n//     <Box sx={{ marginTop: 4 }}>\n//       <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n//         All People on the Flight\n//       </Typography>\n//       <TableContainer component={Paper} sx={{ marginBottom: 4 }}>\n//         <Table>\n//           <TableHead>\n//             <TableRow>\n//               <TableCell>ID</TableCell>\n//               <TableCell>Type</TableCell>\n//               <TableCell>Full Name</TableCell>\n//               <TableCell>Age</TableCell>\n//               <TableCell>Gender</TableCell>\n//               <TableCell>Nationality</TableCell>\n//               <TableCell>Additional Info</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {data.map((person) => (\n//               <TableRow key={person.id} onClick={() => handleRowClick(person)}>\n//                 <TableCell>{person.id}</TableCell>\n//                 <TableCell>{person.type}</TableCell>\n//                 <TableCell>{person.name}</TableCell>\n//                 <TableCell>{person.age}</TableCell>\n//                 <TableCell>{person.gender}</TableCell>\n//                 <TableCell>{person.nationality}</TableCell>\n//                 <TableCell>{person.additionalInfo}</TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//       {selectedPerson && (\n//         <Box className=\"user-card\" sx={{ padding: 2, backgroundColor: 'white', borderRadius: 1, boxShadow: 1 }}>\n//           <Typography variant=\"h6\">User Information</Typography>\n//           <Typography>ID: {selectedPerson.id}</Typography>\n//           <Typography>Name: {selectedPerson.name}</Typography>\n//           <Typography>Age: {selectedPerson.age}</Typography>\n//           <Typography>Gender: {selectedPerson.gender}</Typography>\n//           <Typography>Nationality: {selectedPerson.nationality}</Typography>\n//           <Typography>Type: {selectedPerson.type}</Typography>\n//           <Typography>Additional Info: {selectedPerson.additionalInfo}</Typography>\n//         </Box>\n//       )}\n//     </Box>\n//   );\n// };\n\n// const TabularView = () => {\n//   const { flightNumber } = useParams();\n//   const [data, setData] = useState([]);\n//   const [loading, setLoading] = useState(true); // Add loading state\n\n//   useEffect(() => {\n//     const fetchPassengers = async () => {\n//       try {\n//         const response = await fetch(`http://localhost:8000/api/passengerinfo/flight/${flightNumber}/`);\n//         const passengers = await response.json();\n//         const formattedPassengers = passengers.map(passenger => ({\n//           id: passenger.passenger_id,\n//           type: 'Passenger',\n//           name: passenger.passenger_name,\n//           age: passenger.age,\n//           gender: passenger.gender,\n//           nationality: passenger.nationality,\n//           additionalInfo: `Seat Type: ${passenger.seat_type}, Seat Number: ${passenger.seat_number} , Children: ${\n//             passenger.children && passenger.children.length > 0\n//               ? passenger.children.map(child => child.child_name).join(', ')\n//               : 'No children'\n//           }`\n//         }));\n//         return formattedPassengers;\n//       } catch (error) {\n//         console.error('Error fetching passengers:', error);\n//         return [];\n//       }\n//     };\n\n//     const fetchCrew = async () => {\n//       try {\n//         const response = await fetch(`http://localhost:8080/backend/assigned-crew/${flightNumber}/`);\n//         const crew = await response.json();\n//         const formattedCrew = crew.map(crewMember => {\n//           const isFlightCrew = crewMember.type === 'flight';\n//           const id = isFlightCrew ? crewMember.pilot_id : crewMember.attendant_id;\n//           const additionalInfo = isFlightCrew\n//             ? `Vehicle Restriction: ${crewMember.vehicle_restriction || 'N/A'}, Allowed Range: ${crewMember.allowed_range || 'N/A'}, Seniority Level: ${crewMember.seniority_level || 'N/A'}`\n//             : `Vehicle Restrictions: ${crewMember.vehicle_restrictions || 'N/A'}, Attendant Type: ${crewMember.attendant_type || 'N/A'}, Dishes: ${\n//                 crewMember.dish_recipes && crewMember.dish_recipes.length > 0\n//                   ? crewMember.dish_recipes.map(dish => dish.recipe_name).join(', ')\n//                   : 'Cabin Crew Member not suitable for dishes'\n//               }`;\n\n//           return {\n//             id,\n//             type: isFlightCrew ? 'Flight Crew' : 'Cabin Crew',\n//             name: crewMember.name,\n//             age: crewMember.age,\n//             gender: crewMember.gender,\n//             nationality: crewMember.nationality,\n//             additionalInfo\n//           };\n//         });\n//         return formattedCrew;\n//       } catch (error) {\n//         console.error('Error fetching crew:', error);\n//         return [];\n//       }\n//     };\n\n//     const fetchData = async () => {\n//       const passengers = await fetchPassengers();\n//       const crew = await fetchCrew();\n//       setData([...passengers, ...crew]);\n//       setLoading(false); // Set loading to false once data is fetched\n//     };\n\n//     fetchData();\n//   }, [flightNumber]);\n\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <CssBaseline />\n//       <Container component=\"main\" maxWidth=\"lg\" sx={{ padding: 4 }}>\n//         <Box\n//           sx={{\n//             background: 'linear-gradient(180deg, #f0f4ff 0%, #d0e2ff 100%)',\n//             padding: 4,\n//             borderRadius: 2,\n//             boxShadow: 3,\n//           }}\n//         >\n//           <Typography component=\"h1\" variant=\"h4\" color=\"textSecondary\" gutterBottom>\n//             Tabular View - Interior of the Plane\n//           </Typography>\n//           {loading ? (\n//             <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '60vh' }}>\n//               <ClipLoader size={50} color={\"#123abc\"} loading={loading} />\n//               <Typography variant=\"h6\" color=\"textSecondary\">Loading data, please wait...</Typography>\n//             </Box>\n//           ) : (\n//             <CombinedTable data={data} />\n//           )}\n//         </Box>\n//       </Container>\n//     </ThemeProvider>\n//   );\n// };\n\n// export default TabularView;","map":{"version":3,"names":[],"sources":["/Users/hamza/Desktop/308/FlightRoster/Main System/frontend/src/components/views/TabularView.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import ClipLoader from 'react-spinners/ClipLoader';\n// import { Box, Container, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, CssBaseline } from '@mui/material';\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\n// import './PassengerTable.css'; // Import CSS file for styling\n\n// const theme = createTheme({\n//   palette: {\n//     primary: {\n//       main: '#1976d2',\n//     },\n//     secondary: {\n//       main: '#6C757D',\n//     },\n//     info: {\n//       main: '#17A2B8',\n//     },\n//   },\n//   typography: {\n//     fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n//   },\n// });\n\n// const CombinedTable = ({ data }) => {\n//   const [selectedPerson, setSelectedPerson] = useState(null);\n\n//   const handleRowClick = (person) => {\n//     setSelectedPerson(person);\n//   };\n\n//   return (\n//     <Box sx={{ marginTop: 4 }}>\n//       <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n//         All People on the Flight\n//       </Typography>\n//       <TableContainer component={Paper} sx={{ marginBottom: 4 }}>\n//         <Table>\n//           <TableHead>\n//             <TableRow>\n//               <TableCell>ID</TableCell>\n//               <TableCell>Type</TableCell>\n//               <TableCell>Full Name</TableCell>\n//               <TableCell>Age</TableCell>\n//               <TableCell>Gender</TableCell>\n//               <TableCell>Nationality</TableCell>\n//               <TableCell>Additional Info</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {data.map((person) => (\n//               <TableRow key={person.id} onClick={() => handleRowClick(person)}>\n//                 <TableCell>{person.id}</TableCell>\n//                 <TableCell>{person.type}</TableCell>\n//                 <TableCell>{person.name}</TableCell>\n//                 <TableCell>{person.age}</TableCell>\n//                 <TableCell>{person.gender}</TableCell>\n//                 <TableCell>{person.nationality}</TableCell>\n//                 <TableCell>{person.additionalInfo}</TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//       {selectedPerson && (\n//         <Box className=\"user-card\" sx={{ padding: 2, backgroundColor: 'white', borderRadius: 1, boxShadow: 1 }}>\n//           <Typography variant=\"h6\">User Information</Typography>\n//           <Typography>ID: {selectedPerson.id}</Typography>\n//           <Typography>Name: {selectedPerson.name}</Typography>\n//           <Typography>Age: {selectedPerson.age}</Typography>\n//           <Typography>Gender: {selectedPerson.gender}</Typography>\n//           <Typography>Nationality: {selectedPerson.nationality}</Typography>\n//           <Typography>Type: {selectedPerson.type}</Typography>\n//           <Typography>Additional Info: {selectedPerson.additionalInfo}</Typography>\n//         </Box>\n//       )}\n//     </Box>\n//   );\n// };\n\n// const TabularView = () => {\n//   const { flightNumber } = useParams();\n//   const [data, setData] = useState([]);\n//   const [loading, setLoading] = useState(true); // Add loading state\n\n//   useEffect(() => {\n//     const fetchPassengers = async () => {\n//       try {\n//         const response = await fetch(`http://localhost:8000/api/passengerinfo/flight/${flightNumber}/`);\n//         const passengers = await response.json();\n//         const formattedPassengers = passengers.map(passenger => ({\n//           id: passenger.passenger_id,\n//           type: 'Passenger',\n//           name: passenger.passenger_name,\n//           age: passenger.age,\n//           gender: passenger.gender,\n//           nationality: passenger.nationality,\n//           additionalInfo: `Seat Type: ${passenger.seat_type}, Seat Number: ${passenger.seat_number} , Children: ${\n//             passenger.children && passenger.children.length > 0\n//               ? passenger.children.map(child => child.child_name).join(', ')\n//               : 'No children'\n//           }`\n//         }));\n//         return formattedPassengers;\n//       } catch (error) {\n//         console.error('Error fetching passengers:', error);\n//         return [];\n//       }\n//     };\n\n//     const fetchCrew = async () => {\n//       try {\n//         const response = await fetch(`http://localhost:8080/backend/assigned-crew/${flightNumber}/`);\n//         const crew = await response.json();\n//         const formattedCrew = crew.map(crewMember => {\n//           const isFlightCrew = crewMember.type === 'flight';\n//           const id = isFlightCrew ? crewMember.pilot_id : crewMember.attendant_id;\n//           const additionalInfo = isFlightCrew\n//             ? `Vehicle Restriction: ${crewMember.vehicle_restriction || 'N/A'}, Allowed Range: ${crewMember.allowed_range || 'N/A'}, Seniority Level: ${crewMember.seniority_level || 'N/A'}`\n//             : `Vehicle Restrictions: ${crewMember.vehicle_restrictions || 'N/A'}, Attendant Type: ${crewMember.attendant_type || 'N/A'}, Dishes: ${\n//                 crewMember.dish_recipes && crewMember.dish_recipes.length > 0\n//                   ? crewMember.dish_recipes.map(dish => dish.recipe_name).join(', ')\n//                   : 'Cabin Crew Member not suitable for dishes'\n//               }`;\n\n//           return {\n//             id,\n//             type: isFlightCrew ? 'Flight Crew' : 'Cabin Crew',\n//             name: crewMember.name,\n//             age: crewMember.age,\n//             gender: crewMember.gender,\n//             nationality: crewMember.nationality,\n//             additionalInfo\n//           };\n//         });\n//         return formattedCrew;\n//       } catch (error) {\n//         console.error('Error fetching crew:', error);\n//         return [];\n//       }\n//     };\n\n//     const fetchData = async () => {\n//       const passengers = await fetchPassengers();\n//       const crew = await fetchCrew();\n//       setData([...passengers, ...crew]);\n//       setLoading(false); // Set loading to false once data is fetched\n//     };\n\n//     fetchData();\n//   }, [flightNumber]);\n\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <CssBaseline />\n//       <Container component=\"main\" maxWidth=\"lg\" sx={{ padding: 4 }}>\n//         <Box\n//           sx={{\n//             background: 'linear-gradient(180deg, #f0f4ff 0%, #d0e2ff 100%)',\n//             padding: 4,\n//             borderRadius: 2,\n//             boxShadow: 3,\n//           }}\n//         >\n//           <Typography component=\"h1\" variant=\"h4\" color=\"textSecondary\" gutterBottom>\n//             Tabular View - Interior of the Plane\n//           </Typography>\n//           {loading ? (\n//             <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '60vh' }}>\n//               <ClipLoader size={50} color={\"#123abc\"} loading={loading} />\n//               <Typography variant=\"h6\" color=\"textSecondary\">Loading data, please wait...</Typography>\n//             </Box>\n//           ) : (\n//             <CombinedTable data={data} />\n//           )}\n//         </Box>\n//       </Container>\n//     </ThemeProvider>\n//   );\n// };\n\n// export default TabularView;\n\n\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}